{"openapi":"3.1.0","info":{"title":"FMTM","description":"HOTOSM Field Tasking Manager","license":{"name":"GPL-3.0-only","url":"https://raw.githubusercontent.com/hotosm/fmtm/main/LICENSE"},"version":"0.1.0"},"paths":{"/users/":{"get":{"tags":["users"],"summary":"Get Users","operationId":"get_users_users__get","parameters":[{"name":"username","in":"query","required":false,"schema":{"type":"string","default":"","title":"Username"}},{"name":"skip","in":"query","required":false,"schema":{"type":"integer","default":0,"title":"Skip"}},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","default":100,"title":"Limit"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserOut"},"title":"Response Get Users Users  Get"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/users/{id}":{"get":{"tags":["users"],"summary":"Get User By Id","operationId":"get_user_by_id_users__id__get","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"integer","title":"Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserOut"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/users/user-role":{"post":{"tags":["users"],"summary":"Create User Role","description":"This api creates a new role for the user.\nThe role can be Admin, Organization Admin, Field Admin, Mapper, Validator or Read Only.\n\nRequest Parameters:\n    user_id (required): ID of the user for whom the role is being created\n    organization_id (optional): ID of the organization for which the user is being assigned a role\n    project_id (optional): ID of the project for which the user is being assigned a role\n    role (required): Role being assigned to the user\n\nResponse:\n    Status Code 200 (OK): If the role is successfully created\n    Status Code 400 (Bad Request): If the user is already assigned a role","operationId":"create_user_role_users_user_role_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserRoles"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/users/user-role-options/":{"get":{"tags":["users"],"summary":"Get User Roles","operationId":"get_user_roles_users_user_role_options__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}}}},"/projects/":{"get":{"tags":["projects"],"summary":"Read Projects","operationId":"read_projects_projects__get","parameters":[{"name":"user_id","in":"query","required":false,"schema":{"type":"integer","title":"User Id"}},{"name":"skip","in":"query","required":false,"schema":{"type":"integer","default":0,"title":"Skip"}},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","default":100,"title":"Limit"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ProjectOut"},"title":"Response Read Projects Projects  Get"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/project_details/{project_id}/":{"get":{"tags":["projects"],"summary":"Get Projet Details","description":"Returns the project details.\n\nParameters:\n    project_id: int\n\nReturns:\n    Response: Project details.","operationId":"get_projet_details_projects_project_details__project_id___get","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/near_me":{"post":{"tags":["projects"],"summary":"Get Task","operationId":"get_task_projects_near_me_post","parameters":[{"name":"lat","in":"query","required":true,"schema":{"type":"number","title":"Lat"}},{"name":"long","in":"query","required":true,"schema":{"type":"number","title":"Long"}},{"name":"user_id","in":"query","required":false,"schema":{"type":"integer","title":"User Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProjectSummary"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/summaries":{"get":{"tags":["projects"],"summary":"Read Project Summaries","operationId":"read_project_summaries_projects_summaries_get","parameters":[{"name":"user_id","in":"query","required":false,"schema":{"type":"integer","title":"User Id"}},{"name":"hashtags","in":"query","required":false,"schema":{"type":"string","title":"Hashtags"}},{"name":"skip","in":"query","required":false,"schema":{"type":"integer","default":0,"title":"Skip"}},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","default":100,"title":"Limit"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ProjectSummary"},"title":"Response Read Project Summaries Projects Summaries Get"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/{project_id}":{"get":{"tags":["projects"],"summary":"Read Project","operationId":"read_project_projects__project_id__get","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProjectOut"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/delete/{project_id}":{"delete":{"tags":["projects"],"summary":"Delete Project","description":"Delete a project from ODK Central and the local database.","operationId":"delete_project_projects_delete__project_id__delete","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/create_project":{"post":{"tags":["projects"],"summary":"Create Project","description":"Create a project in ODK Central and the local database.","operationId":"create_project_projects_create_project_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BETAProjectUpload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProjectOut"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/update_odk_credentials":{"post":{"tags":["projects"],"summary":"Update Odk Credentials","description":"Update odk credential of a project.","operationId":"update_odk_credentials_projects_update_odk_credentials_post","parameters":[{"name":"project_id","in":"query","required":true,"schema":{"type":"integer","title":"Project Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ODKCentral"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/{id}":{"put":{"tags":["projects"],"summary":"Update Project","description":"Update an existing project by ID.\n\nParameters:\n- id: ID of the project to update\n- author: Author username and id\n- project_info: Updated project information\n\nReturns:\n- Updated project information\n\nRaises:\n- HTTPException with 404 status code if project not found","operationId":"update_project_projects__id__put","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"integer","title":"Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BETAProjectUpload"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProjectOut"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"patch":{"tags":["projects"],"summary":"Project Partial Update","description":"Partial Update an existing project by ID.\n\nParameters:\n- id\n- name\n- short_description\n- description\n\nReturns:\n- Updated project information\n\nRaises:\n- HTTPException with 404 status code if project not found","operationId":"project_partial_update_projects__id__patch","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"integer","title":"Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProjectUpdate"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProjectOut"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/beta/{project_id}/upload":{"post":{"tags":["projects"],"summary":"Upload Project Boundary With Zip","description":"Upload a ZIP with task geojson polygons and QR codes for an existing project.\n\n{PROJECT_NAME}/\\n\n\u251c\u2500 {PROJECT_NAME}.geojson\\n\n\u251c\u2500 {PROJECT_NAME}_polygons.geojson\\n\n\u251c\u2500 geojson/\\n\n\u2502  \u251c\u2500 {PROJECT_NAME}_TASK_TYPE__{TASK_NUM}.geojson\\n\n\u251c\u2500 QR_codes/\\n\n\u2502  \u251c\u2500 {PROJECT_NAME}_{TASK_TYPE}__{TASK_NUM}.png\\n","operationId":"upload_project_boundary_with_zip_projects_beta__project_id__upload_post","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"project_name_prefix","in":"query","required":true,"schema":{"type":"string","title":"Project Name Prefix"}},{"name":"task_type_prefix","in":"query","required":true,"schema":{"type":"string","title":"Task Type Prefix"}}],"requestBody":{"required":true,"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_upload_project_boundary_with_zip_projects_beta__project_id__upload_post"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/upload_xlsform":{"post":{"tags":["projects"],"summary":"Upload Custom Xls","description":"Upload a custom XLSForm to the database.\nParameters:\n- upload: the XLSForm file\n- category: the category of the XLSForm.","operationId":"upload_custom_xls_projects_upload_xlsform_post","requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_upload_custom_xls_projects_upload_xlsform_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/{project_id}/upload_multi_polygon":{"post":{"tags":["projects"],"summary":"Upload Multi Project Boundary","description":"This API allows for the uploading of a multi-polygon project boundary\n    in JSON format for a specified project ID. Each polygon in the uploaded geojson are made a single task.\n\nRequired Parameters:\nproject_id: ID of the project to which the boundary is being uploaded.\nupload: a file upload containing the multi-polygon boundary in geojson format.\n\nReturns:\nA success message indicating that the boundary was successfully uploaded.\nIf the project ID does not exist in the database, an HTTP 428 error is raised.","operationId":"upload_multi_project_boundary_projects__project_id__upload_multi_polygon_post","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"requestBody":{"required":true,"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_upload_multi_project_boundary_projects__project_id__upload_multi_polygon_post"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/task_split":{"post":{"tags":["projects"],"summary":"Task Split","description":"Split a task into subtasks.\n\nArgs:\n    upload (UploadFile): The file to split.\n    no_of_buildings (int, optional): The number of buildings per subtask. Defaults to 50.\n    db (Session, optional): The database session. Injected by FastAPI.\n\nReturns:\n    The result of splitting the task into subtasks.","operationId":"task_split_projects_task_split_post","requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_task_split_projects_task_split_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/{project_id}/upload":{"post":{"tags":["projects"],"summary":"Upload Project Boundary","description":"Uploads the project boundary. The boundary is uploaded as a geojson file.\n\nParams:\n- project_id (int): The ID of the project to update.\n- upload (UploadFile): The boundary file to upload.\n- dimension (int): The new dimension of the project.\n- db (Session): The database session to use.\n\nReturns:\n- Dict: A dictionary with a message, the project ID, and the number of tasks in the project.","operationId":"upload_project_boundary_projects__project_id__upload_post","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"requestBody":{"required":true,"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_upload_project_boundary_projects__project_id__upload_post"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/edit_project_boundary/{project_id}/":{"post":{"tags":["projects"],"summary":"Edit Project Boundary","operationId":"edit_project_boundary_projects_edit_project_boundary__project_id___post","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"requestBody":{"required":true,"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_edit_project_boundary_projects_edit_project_boundary__project_id___post"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/validate_form":{"post":{"tags":["projects"],"summary":"Validate Form","description":"Tests the validity of the xls form uploaded.\n\nParameters:\n    - form: The xls form to validate","operationId":"validate_form_projects_validate_form_post","requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_validate_form_projects_validate_form_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/{project_id}/generate":{"post":{"tags":["projects"],"summary":"Generate Files","description":"Generate required media files tasks in the project based on the provided params.\n\nAccepts a project ID, category, custom form flag, and an uploaded file as inputs.\nThe generated files are associated with the project ID and stored in the database.\nThis api generates qr_code, forms. This api also creates an app user for each task and provides the required roles.\nSome of the other functionality of this api includes converting a xls file provided by the user to the xform,\ngenerates osm data extracts and uploads it to the form.\n\n\nParameters:\n\nproject_id (int): The ID of the project for which files are being generated. This is a required field.\npolygon (bool): A boolean flag indicating whether the polygon is extracted or not.\n\nupload (UploadFile): An uploaded file that is used as input for generating the files.\n    This is not a required field. A file should be provided if user wants to upload a custom xls form.\n\nReturns:\nMessage (str): A success message containing the project ID.","operationId":"generate_files_projects__project_id__generate_post","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"requestBody":{"content":{"multipart/form-data":{"schema":{"allOf":[{"$ref":"#/components/schemas/Body_generate_files_projects__project_id__generate_post"}],"title":"Body"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/update-form/{project_id}":{"post":{"tags":["projects"],"summary":"Update Project Form","operationId":"update_project_form_projects_update_form__project_id__post","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"requestBody":{"required":true,"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_update_project_form_projects_update_form__project_id__post"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/{project_id}/features":{"get":{"tags":["projects"],"summary":"Get Project Features","description":"Get api for fetching all the features of a project.\n\nThis endpoint allows you to get all the features of a project.\n\n## Request Body\n- `project_id` (int): the project's id. Required.\n\n## Response\n- Returns a JSON object containing a list of features.","operationId":"get_project_features_projects__project_id__features_get","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"task_id","in":"query","required":false,"schema":{"type":"integer","title":"Task Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/app__projects__project_schemas__Feature"},"title":"Response Get Project Features Projects  Project Id  Features Get"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/generate-log/":{"get":{"tags":["projects"],"summary":"Generate Log","description":"Get the contents of a log file in a log format.\n\n### Response\n- **200 OK**: Returns the contents of the log file in a log format. Each line is separated by a newline character \"\\n\".\n\n- **500 Internal Server Error**: Returns an error message if the log file cannot be generated.\n\n### Return format\nTask Status and Logs are returned in a JSON format.","operationId":"generate_log_projects_generate_log__get","parameters":[{"name":"project_id","in":"query","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"uuid","in":"query","required":true,"schema":{"type":"string","format":"uuid","title":"Uuid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/categories/":{"get":{"tags":["projects"],"summary":"Get Categories","description":"Get api for fetching all the categories.\n\nThis endpoint fetches all the categories from osm_fieldwork.\n\n## Response\n- Returns a JSON object containing a list of categories and their respoective forms.","operationId":"get_categories_projects_categories__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}}}},"/projects/preview_tasks/":{"post":{"tags":["projects"],"summary":"Preview Tasks","description":"Preview tasks for a project.\n\nThis endpoint allows you to preview tasks for a project.\n\n## Request Body\n- `project_id` (int): the project's id. Required.\n\n## Response\n- Returns a JSON object containing a list of tasks.","operationId":"preview_tasks_projects_preview_tasks__post","requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_preview_tasks_projects_preview_tasks__post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/add_features/":{"post":{"tags":["projects"],"summary":"Add Features","description":"Add features to a project.\n\nThis endpoint allows you to add features to a project.\n\nRequest Body\n- 'project_id' (int): the project's id. Required.\n- 'upload' (file): Geojson files with the features. Required.","operationId":"add_features_projects_add_features__post","parameters":[{"name":"feature_type","in":"query","required":true,"schema":{"type":"string","description":"Select feature type ","enum":["buildings","lines"],"title":"Feature Type"},"description":"Select feature type "}],"requestBody":{"required":true,"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_add_features_projects_add_features__post"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/download_form/{project_id}/":{"get":{"tags":["projects"],"summary":"Download Form","operationId":"download_form_projects_download_form__project_id___get","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/update_category":{"post":{"tags":["projects"],"summary":"Update Project Category","operationId":"update_project_category_projects_update_category_post","requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_update_project_category_projects_update_category_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/download_template/":{"get":{"tags":["projects"],"summary":"Download Template","operationId":"download_template_projects_download_template__get","parameters":[{"name":"category","in":"query","required":true,"schema":{"type":"string","title":"Category"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/{project_id}/download":{"get":{"tags":["projects"],"summary":"Download Project Boundary","description":"Downloads the boundary of a project as a GeoJSON file.\n\nArgs:\n    project_id (int): The id of the project.\n\nReturns:\n    Response: The HTTP response object containing the downloaded file.","operationId":"download_project_boundary_projects__project_id__download_get","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/{project_id}/download_tasks":{"get":{"tags":["projects"],"summary":"Download Task Boundaries","description":"Downloads the boundary of the tasks for a project as a GeoJSON file.\n\nArgs:\n    project_id (int): The id of the project.\n\nReturns:\n    Response: The HTTP response object containing the downloaded file.","operationId":"download_task_boundaries_projects__project_id__download_tasks_get","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/features/download/":{"get":{"tags":["projects"],"summary":"Download Features","description":"Downloads the features of a project as a GeoJSON file.\n\nArgs:\n    project_id (int): The id of the project.\n\nReturns:\n    Response: The HTTP response object containing the downloaded file.","operationId":"download_features_projects_features_download__get","parameters":[{"name":"project_id","in":"query","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/tiles/{project_id}":{"get":{"tags":["projects"],"summary":"Generate Project Tiles","description":"Returns the tiles for a project.\n\nArgs:\n    project_id (int): The id of the project.\n    source (str): The selected source.\n\nReturns:\n    Response: The File response object containing the tiles.","operationId":"generate_project_tiles_projects_tiles__project_id__get","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"source","in":"query","required":true,"schema":{"type":"string","description":"Select a source for tiles","enum":["esri","bing","google","topo"],"title":"Source"},"description":"Select a source for tiles"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/tiles_list/{project_id}/":{"get":{"tags":["projects"],"summary":"Tiles List","description":"Returns the list of tiles for a project.\n\nParameters:\n    project_id: int\n\nReturns:\n    Response: List of generated tiles for a project.","operationId":"tiles_list_projects_tiles_list__project_id___get","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/download_tiles/":{"get":{"tags":["projects"],"summary":"Download Tiles","operationId":"download_tiles_projects_download_tiles__get","parameters":[{"name":"tile_id","in":"query","required":true,"schema":{"type":"integer","title":"Tile Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/boundary_in_osm/{project_id}/":{"get":{"tags":["projects"],"summary":"Download Task Boundary Osm","description":"Downloads the boundary of a task as a OSM file.\n\nArgs:\n    project_id (int): The id of the project.\n\nReturns:\n    Response: The HTTP response object containing the downloaded file.","operationId":"download_task_boundary_osm_projects_boundary_in_osm__project_id___get","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/projects/centroid/":{"get":{"tags":["projects"],"summary":"Project Centroid","description":"Get a centroid of each projects.\n\nParameters:\n    project_id (int): The ID of the project.\n\nReturns:\n    List[Tuple[int, str]]: A list of tuples containing the task ID and the centroid as a string.","operationId":"project_centroid_projects_centroid__get","parameters":[{"name":"project_id","in":"query","required":false,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/tasks/task-list":{"get":{"tags":["tasks"],"summary":"Read Task List","operationId":"read_task_list_tasks_task_list_get","parameters":[{"name":"project_id","in":"query","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","default":1000,"title":"Limit"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TaskOut"},"title":"Response Read Task List Tasks Task List Get"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/tasks/":{"get":{"tags":["tasks"],"summary":"Read Tasks","operationId":"read_tasks_tasks__get","parameters":[{"name":"project_id","in":"query","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"user_id","in":"query","required":false,"schema":{"type":"integer","title":"User Id"}},{"name":"skip","in":"query","required":false,"schema":{"type":"integer","default":0,"title":"Skip"}},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","default":1000,"title":"Limit"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TaskOut"},"title":"Response Read Tasks Tasks  Get"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/tasks/point_on_surface":{"get":{"tags":["tasks"],"summary":"Get Point On Surface","description":"Get a point on the surface of the geometry for each task of the project.\n\nParameters:\n    project_id (int): The ID of the project.\n\nReturns:\n    List[Tuple[int, str]]: A list of tuples containing the task ID and the centroid as a string.","operationId":"get_point_on_surface_tasks_point_on_surface_get","parameters":[{"name":"project_id","in":"query","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/tasks/near_me":{"post":{"tags":["tasks"],"summary":"Get Task","description":"Get tasks near the requesting user.","operationId":"get_task_tasks_near_me_post","parameters":[{"name":"lat","in":"query","required":true,"schema":{"type":"number","title":"Lat"}},{"name":"long","in":"query","required":true,"schema":{"type":"number","title":"Long"}},{"name":"project_id","in":"query","required":false,"schema":{"type":"integer","title":"Project Id"}},{"name":"user_id","in":"query","required":false,"schema":{"type":"integer","title":"User Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaskOut"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/tasks/{task_id}":{"get":{"tags":["tasks"],"summary":"Read Tasks","operationId":"read_tasks_tasks__task_id__get","parameters":[{"name":"task_id","in":"path","required":true,"schema":{"type":"integer","title":"Task Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaskOut"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/tasks/{task_id}/new_status/{new_status}":{"post":{"tags":["tasks"],"summary":"Update Task Status","operationId":"update_task_status_tasks__task_id__new_status__new_status__post","parameters":[{"name":"task_id","in":"path","required":true,"schema":{"type":"integer","title":"Task Id"}},{"name":"new_status","in":"path","required":true,"schema":{"$ref":"#/components/schemas/TaskStatusOptions"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaskOut"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/tasks/task-qr-code/{task_id}":{"post":{"tags":["tasks"],"summary":"Get Qr Code List","operationId":"get_qr_code_list_tasks_task_qr_code__task_id__post","parameters":[{"name":"task_id","in":"path","required":true,"schema":{"type":"integer","title":"Task Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/tasks/edit-task-boundary":{"post":{"tags":["tasks"],"summary":"Edit Task Boundary","operationId":"edit_task_boundary_tasks_edit_task_boundary_post","parameters":[{"name":"task_id","in":"query","required":true,"schema":{"type":"integer","title":"Task Id"}}],"requestBody":{"required":true,"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_edit_task_boundary_tasks_edit_task_boundary_post"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/tasks/tasks-features/":{"get":{"tags":["tasks"],"summary":"Task Features Count","operationId":"task_features_count_tasks_tasks_features__get","parameters":[{"name":"project_id","in":"query","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/central/projects":{"get":{"tags":["central"],"summary":"List Projects","description":"List projects in Central.","operationId":"list_projects_central_projects_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}}}},"/central/appuser":{"get":{"tags":["central"],"summary":"Create Appuser","description":"Create an appuser in Central.","operationId":"create_appuser_central_appuser_get","parameters":[{"name":"project_id","in":"query","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"name","in":"query","required":true,"schema":{"type":"string","title":"Name"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/central/list-forms":{"get":{"tags":["central"],"summary":"Get Form Lists","description":"This function retrieves a list of XForms from a database,\nwith the option to skip a certain number of records and limit the number of records returned.\n\n\nParameters:\nskip:int: the number of records to skip before starting to retrieve records. Defaults to 0 if not provided.\nlimit:int: the maximum number of records to retrieve. Defaults to 10 if not provided.\n\n\nReturns:\nA list of dictionary containing the id and title of each XForm record retrieved from the database.","operationId":"get_form_lists_central_list_forms_get","parameters":[{"name":"skip","in":"query","required":false,"schema":{"type":"integer","default":0,"title":"Skip"}},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","default":100,"title":"Limit"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/central/download_submissions":{"get":{"tags":["central"],"summary":"Download Submissions","description":"Download the submissions data from Central.","operationId":"download_submissions_central_download_submissions_get","parameters":[{"name":"project_id","in":"query","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/central/list-submissions":{"get":{"tags":["central"],"summary":"List Submissions","operationId":"list_submissions_central_list_submissions_get","parameters":[{"name":"project_id","in":"query","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"xml_form_id","in":"query","required":false,"schema":{"type":"string","title":"Xml Form Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/central/submission":{"get":{"tags":["central"],"summary":"Get Submission","description":"This api returns the submission json.\n\nParameters:\nproject_id:int the id of the project in the database.\nxml_form_id:str: the xmlFormId of the form in Central.\nsubmission_id:str: the submission id of the submission in Central.\n\nIf the submission_id is provided, an individual submission is returned.\n\nReturns: Submission json.","operationId":"get_submission_central_submission_get","parameters":[{"name":"project_id","in":"query","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"xmlFormId","in":"query","required":false,"schema":{"type":"string","title":"Xmlformid"}},{"name":"submission_id","in":"query","required":false,"schema":{"type":"string","title":"Submission Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/auth/osm_login/":{"get":{"tags":["auth"],"summary":"Login Url","description":"Generate Login URL for authentication using OAuth2 Application registered with OpenStreetMap.\nClick on the download url returned to get access_token.\n\nParameters: None\n\nReturns:\n-------\n- login_url (string) - URL to authorize user to the application via. Openstreetmap\n    OAuth2 with client_id, redirect_uri, and permission scope as query_string parameters","operationId":"login_url_auth_osm_login__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}}}},"/auth/callback/":{"get":{"tags":["auth"],"summary":"Callback","description":"Performs token exchange between OpenStreetMap and Export tool API.\n\nCore will use Oauth secret key from configuration while deserializing token,\nprovides access token that can be used for authorized endpoints.\n\nParameters: None\n\nReturns:\n-------\n- access_token (string)","operationId":"callback_auth_callback__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}}}},"/auth/me/":{"get":{"tags":["auth"],"summary":"My Data","description":"Read the access token and provide  user details from OSM user's API endpoint,\nalso integrated with underpass .\n\nParameters:None\n\nReturns: user_data","operationId":"my_data_auth_me__get","parameters":[{"name":"access-token","in":"header","required":true,"schema":{"type":"string","title":"Access-Token"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthUser"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/submission/":{"get":{"tags":["submission"],"summary":"Read Submissions","description":"This api returns the submission made in the project.\nIt takes two parameters: project_id and task_id.\n\n\nproject_id: The ID of the project. This endpoint returns the submission made in this project.\n\ntask_id: The ID of the task. This parameter is optional. If task_id is provided, this endpoint returns the submissions made for this task.\n\nReturns the list of submissions.","operationId":"read_submissions_submission__get","parameters":[{"name":"project_id","in":"query","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"task_id","in":"query","required":false,"schema":{"type":"integer","title":"Task Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/submission/list-forms":{"get":{"tags":["submission"],"summary":"List Forms","description":"This api returns the list of forms in the odk central.\n\nIt takes one parameter: project_id.\n\nproject_id: The ID of the project. This endpoint returns the list of forms in this project.\n\nReturns the list of forms details provided by the central api.","operationId":"list_forms_submission_list_forms_get","parameters":[{"name":"project_id","in":"query","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/submission/list-app-users":{"get":{"tags":["submission"],"summary":"List App Users","description":"This api returns the list of forms in the odk central.\n\nIt takes one parameter: project_id.\n\nproject_id: The ID of the project. This endpoint returns the list of forms in this project.\n\nReturns the list of forms details provided by the central api.","operationId":"list_app_users_submission_list_app_users_get","parameters":[{"name":"project_id","in":"query","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/submission/download":{"get":{"tags":["submission"],"summary":"Download Submission","description":"This api downloads the the submission made in the project.\nIt takes two parameters: project_id and task_id.\n\nproject_id: The ID of the project. This endpoint returns the submission made in this project.\n\ntask_id: The ID of the task. This parameter is optional. If task_id is provided, this endpoint returns the submissions made for this task.","operationId":"download_submission_submission_download_get","parameters":[{"name":"project_id","in":"query","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"task_id","in":"query","required":false,"schema":{"type":"integer","title":"Task Id"}},{"name":"export_json","in":"query","required":false,"schema":{"type":"boolean","default":true,"title":"Export Json"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/submission/submission-points":{"get":{"tags":["submission"],"summary":"Submission Points","description":"This api returns the submission points of a project.\nIt takes two parameter: project_id and task_id.\n\nproject_id: The ID of the project. This endpoint returns the submission points of this project.\ntask_id: The task_id of the project. This endpoint returns the submission points of this task.","operationId":"submission_points_submission_submission_points_get","parameters":[{"name":"project_id","in":"query","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"task_id","in":"query","required":false,"schema":{"type":"integer","title":"Task Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/submission/convert-to-osm":{"get":{"tags":["submission"],"summary":"Convert To Osm","description":"This api converts the submission to osm format.\nIt takes two parameter: project_id and task_id.\n\ntask_id is optional. \nIf task_id is provided, this endpoint converts the submission of this task.\nIf task_id is not provided, this endpoint converts the submission of the whole project.","operationId":"convert_to_osm_submission_convert_to_osm_get","parameters":[{"name":"project_id","in":"query","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"task_id","in":"query","required":false,"schema":{"type":"integer","title":"Task Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/submission/get-submission-count/{project_id}":{"get":{"tags":["submission"],"summary":"Get Submission Count","operationId":"get_submission_count_submission_get_submission_count__project_id__get","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/submission/conflate_data":{"post":{"tags":["submission"],"summary":"Conflate Osm Date","operationId":"conflate_osm_date_submission_conflate_data_post","parameters":[{"name":"project_id","in":"query","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/submission/get_osm_xml/{project_id}":{"get":{"tags":["submission"],"summary":"Get Osm Xml","operationId":"get_osm_xml_submission_get_osm_xml__project_id__get","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/organization/":{"get":{"tags":["organization"],"summary":"Get Organisations","description":"Get api for fetching organization list.","operationId":"get_organisations_organization__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}}},"post":{"tags":["organization"],"summary":"Create Organization","description":"Create an organization with the given details.\n\nParameters:\n    name (str): The name of the organization. Required.\n    description (str): The description of the organization. Optional.\n    url (str): The URL of the organization. Optional.\n    logo (UploadFile): The logo of the organization. Optional.\n    db (Session): The database session. Dependency.\n\nReturns:\n    dict: A dictionary with a message indicating successful creation of the organization.","operationId":"create_organization_organization__post","requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_create_organization_organization__post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/organization/{organization_id}":{"get":{"tags":["organization"],"summary":"Get Organization Detail","description":"Get API for fetching detail about a organiation based on id","operationId":"get_organization_detail_organization__organization_id__get","parameters":[{"name":"organization_id","in":"path","required":true,"schema":{"type":"integer","title":"Organization Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["organization"],"summary":"Delete Organisations","operationId":"delete_organisations_organization__organization_id__delete","parameters":[{"name":"organization_id","in":"path","required":true,"schema":{"type":"integer","title":"Organization Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/organization/{organization_id}/":{"patch":{"tags":["organization"],"summary":"Update Organization","description":"PUT API to update the details of an organization","operationId":"update_organization_organization__organization_id___patch","parameters":[{"name":"organization_id","in":"path","required":true,"schema":{"type":"integer","title":"Organization Id"}}],"requestBody":{"content":{"multipart/form-data":{"schema":{"allOf":[{"$ref":"#/components/schemas/Body_update_organization_organization__organization_id___patch"}],"title":"Body"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/":{"get":{"summary":"Home","description":"Redirect home to docs.","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/items/{item_id}":{"get":{"summary":"Read Item","description":"Get item IDs.","operationId":"read_item_items__item_id__get","parameters":[{"name":"item_id","in":"path","required":true,"schema":{"type":"integer","title":"Item Id"}},{"name":"q","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Q"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/images/{image_filename}":{"get":{"summary":"Get Images","description":"Download image files.","operationId":"get_images_images__image_filename__get","parameters":[{"name":"image_filename","in":"path","required":true,"schema":{"type":"string","title":"Image Filename"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"AuthUser":{"properties":{"id":{"type":"integer","title":"Id"},"username":{"type":"string","title":"Username"},"img_url":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Img Url"}},"type":"object","required":["id","username","img_url"],"title":"AuthUser"},"BETAProjectUpload":{"properties":{"author":{"$ref":"#/components/schemas/User"},"project_info":{"$ref":"#/components/schemas/ProjectInfo"},"xform_title":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Xform Title"},"odk_central":{"$ref":"#/components/schemas/ODKCentral"},"hashtags":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Hashtags"},"organisation_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Organisation Id"}},"type":"object","required":["author","project_info","xform_title","odk_central","hashtags"],"title":"BETAProjectUpload"},"BaseModel":{"properties":{},"type":"object","title":"BaseModel","description":"Usage docs: https://docs.pydantic.dev/2.2/usage/models/\n\nA base class for creating Pydantic models.\n\nAttributes:\n    __class_vars__: The names of classvars defined on the model.\n    __private_attributes__: Metadata about the private attributes of the model.\n    __signature__: The signature for instantiating the model.\n\n    __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.\n    __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.\n    __pydantic_custom_init__: Whether the model has a custom `__init__` function.\n    __pydantic_decorators__: Metadata containing the decorators defined on the model.\n        This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.\n    __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to\n        __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.\n    __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.\n    __pydantic_post_init__: The name of the post-init method for the model, if defined.\n    __pydantic_root_model__: Whether the model is a `RootModel`.\n    __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.\n    __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.\n\n    __pydantic_extra__: An instance attribute with the values of extra fields from validation when\n        `model_config['extra'] == 'allow'`.\n    __pydantic_fields_set__: An instance attribute with the names of fields explicitly specified during validation.\n    __pydantic_private__: Instance attribute with the values of private attributes set on the model instance."},"Body_add_features_projects_add_features__post":{"properties":{"upload":{"type":"string","format":"binary","title":"Upload"}},"type":"object","required":["upload"],"title":"Body_add_features_projects_add_features__post"},"Body_create_organization_organization__post":{"properties":{"name":{"type":"string","title":"Name"},"description":{"type":"string","title":"Description"},"url":{"type":"string","title":"Url"},"logo":{"type":"string","format":"binary","title":"Logo"}},"type":"object","required":["name"],"title":"Body_create_organization_organization__post"},"Body_edit_project_boundary_projects_edit_project_boundary__project_id___post":{"properties":{"upload":{"type":"string","format":"binary","title":"Upload"},"dimension":{"type":"integer","title":"Dimension","default":500}},"type":"object","required":["upload"],"title":"Body_edit_project_boundary_projects_edit_project_boundary__project_id___post"},"Body_edit_task_boundary_tasks_edit_task_boundary_post":{"properties":{"boundary":{"type":"string","format":"binary","title":"Boundary"}},"type":"object","required":["boundary"],"title":"Body_edit_task_boundary_tasks_edit_task_boundary_post"},"Body_generate_files_projects__project_id__generate_post":{"properties":{"extract_polygon":{"type":"boolean","title":"Extract Polygon","default":false},"upload":{"anyOf":[{"type":"string","format":"binary"},{"type":"null"}],"title":"Upload"},"config_file":{"anyOf":[{"type":"string","format":"binary"},{"type":"null"}],"title":"Config File"},"data_extracts":{"anyOf":[{"type":"string","format":"binary"},{"type":"null"}],"title":"Data Extracts"}},"type":"object","title":"Body_generate_files_projects__project_id__generate_post"},"Body_preview_tasks_projects_preview_tasks__post":{"properties":{"upload":{"type":"string","format":"binary","title":"Upload"},"dimension":{"type":"integer","title":"Dimension","default":500}},"type":"object","required":["upload"],"title":"Body_preview_tasks_projects_preview_tasks__post"},"Body_task_split_projects_task_split_post":{"properties":{"upload":{"type":"string","format":"binary","title":"Upload"},"no_of_buildings":{"type":"integer","title":"No Of Buildings","default":50},"has_data_extracts":{"type":"boolean","title":"Has Data Extracts","default":false}},"type":"object","required":["upload"],"title":"Body_task_split_projects_task_split_post"},"Body_update_organization_organization__organization_id___patch":{"properties":{"name":{"type":"string","title":"Name"},"description":{"type":"string","title":"Description"},"url":{"type":"string","title":"Url"},"logo":{"type":"string","format":"binary","title":"Logo"}},"type":"object","title":"Body_update_organization_organization__organization_id___patch"},"Body_update_project_category_projects_update_category_post":{"properties":{"project_id":{"type":"integer","title":"Project Id"},"category":{"type":"string","title":"Category"},"upload":{"anyOf":[{"type":"string","format":"binary"},{"type":"null"}],"title":"Upload"}},"type":"object","required":["project_id","category"],"title":"Body_update_project_category_projects_update_category_post"},"Body_update_project_form_projects_update_form__project_id__post":{"properties":{"form":{"anyOf":[{"type":"string","format":"binary"},{"type":"null"}],"title":"Form"}},"type":"object","required":["form"],"title":"Body_update_project_form_projects_update_form__project_id__post"},"Body_upload_custom_xls_projects_upload_xlsform_post":{"properties":{"upload":{"type":"string","format":"binary","title":"Upload"},"category":{"type":"string","title":"Category"}},"type":"object","required":["upload","category"],"title":"Body_upload_custom_xls_projects_upload_xlsform_post"},"Body_upload_multi_project_boundary_projects__project_id__upload_multi_polygon_post":{"properties":{"upload":{"type":"string","format":"binary","title":"Upload"}},"type":"object","required":["upload"],"title":"Body_upload_multi_project_boundary_projects__project_id__upload_multi_polygon_post"},"Body_upload_project_boundary_projects__project_id__upload_post":{"properties":{"upload":{"type":"string","format":"binary","title":"Upload"},"dimension":{"type":"integer","title":"Dimension","default":500}},"type":"object","required":["upload"],"title":"Body_upload_project_boundary_projects__project_id__upload_post"},"Body_upload_project_boundary_with_zip_projects_beta__project_id__upload_post":{"properties":{"upload":{"type":"string","format":"binary","title":"Upload"}},"type":"object","required":["upload"],"title":"Body_upload_project_boundary_with_zip_projects_beta__project_id__upload_post"},"Body_validate_form_projects_validate_form_post":{"properties":{"form":{"type":"string","format":"binary","title":"Form"}},"type":"object","required":["form"],"title":"Body_validate_form_projects_validate_form_post"},"GeometryCollection":{"type":"object","title":"GeometryCollection","description":"GeometryCollection Model"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LineString":{"type":"object","title":"LineString","description":"LineString Model"},"MultiLineString":{"type":"object","title":"MultiLineString","description":"MultiLineString Model"},"MultiPoint":{"type":"object","title":"MultiPoint","description":"MultiPoint Model"},"MultiPolygon":{"type":"object","title":"MultiPolygon","description":"MultiPolygon Model"},"ODKCentral":{"properties":{"odk_central_url":{"type":"string","title":"Odk Central Url"},"odk_central_user":{"type":"string","title":"Odk Central User"},"odk_central_password":{"type":"string","title":"Odk Central Password"}},"type":"object","required":["odk_central_url","odk_central_user","odk_central_password"],"title":"ODKCentral"},"Point":{"type":"object","title":"Point","description":"Point Model"},"Polygon":{"type":"object","title":"Polygon","description":"Polygon Model"},"ProjectInfo":{"properties":{"name":{"type":"string","title":"Name"},"short_description":{"type":"string","title":"Short Description"},"description":{"type":"string","title":"Description"}},"type":"object","required":["name","short_description","description"],"title":"ProjectInfo"},"ProjectOut":{"properties":{"id":{"type":"integer","title":"Id"},"odkid":{"type":"integer","title":"Odkid"},"author":{"$ref":"#/components/schemas/User"},"project_info":{"items":{"$ref":"#/components/schemas/ProjectInfo"},"type":"array","title":"Project Info"},"status":{"$ref":"#/components/schemas/ProjectStatus"},"project_tasks":{"anyOf":[{"items":{"$ref":"#/components/schemas/Task"},"type":"array"},{"type":"null"}],"title":"Project Tasks"},"xform_title":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Xform Title"},"hashtags":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Hashtags"},"organisation_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Organisation Id"}},"type":"object","required":["id","odkid","author","project_info","status","project_tasks","xform_title","hashtags","organisation_id"],"title":"ProjectOut"},"ProjectPriority":{"type":"integer","enum":[0,1,2,3],"title":"ProjectPriority","description":"Enum to describe all possible project priority levels."},"ProjectStatus":{"type":"integer","enum":[0,1,2],"title":"ProjectStatus","description":"Enum to describes all possible states of a Mapping Project."},"ProjectSummary":{"properties":{"id":{"type":"integer","title":"Id","default":-1},"priority":{"allOf":[{"$ref":"#/components/schemas/ProjectPriority"}],"default":2},"priority_str":{"type":"string","title":"Priority Str","default":"MEDIUM"},"title":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Title"},"location_str":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Location Str"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"total_tasks":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Total Tasks"},"tasks_mapped":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Tasks Mapped"},"num_contributors":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Num Contributors"},"tasks_validated":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Tasks Validated"},"tasks_bad":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Tasks Bad"},"hashtags":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Hashtags"},"organisation_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Organisation Id"},"organisation_logo":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Organisation Logo"}},"type":"object","required":["id","priority","priority_str","title","location_str","description","total_tasks","tasks_mapped","num_contributors","tasks_validated","tasks_bad","hashtags","organisation_id","organisation_logo"],"title":"ProjectSummary"},"ProjectUpdate":{"properties":{"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"short_description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Short Description"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"}},"type":"object","required":["name","short_description","description"],"title":"ProjectUpdate"},"Task":{"properties":{"id":{"type":"integer","title":"Id"},"project_id":{"type":"integer","title":"Project Id"},"project_task_index":{"type":"integer","title":"Project Task Index"},"project_task_name":{"type":"string","title":"Project Task Name"},"outline_geojson":{"$ref":"#/components/schemas/geojson_pydantic__features__Feature"},"outline_centroid":{"$ref":"#/components/schemas/geojson_pydantic__features__Feature"},"task_status":{"$ref":"#/components/schemas/TaskStatus"},"locked_by_uid":{"type":"integer","title":"Locked By Uid"},"locked_by_username":{"type":"string","title":"Locked By Username"},"task_history":{"items":{"$ref":"#/components/schemas/TaskHistoryBase"},"type":"array","title":"Task History"},"qr_code_base64":{"type":"string","title":"Qr Code Base64"},"task_status_str":{"$ref":"#/components/schemas/TaskStatusOptions"}},"type":"object","required":["id","project_id","project_task_index","project_task_name","outline_geojson","outline_centroid","task_status","locked_by_uid","locked_by_username","task_history","qr_code_base64","task_status_str"],"title":"Task"},"TaskHistoryBase":{"properties":{"id":{"type":"integer","title":"Id"},"action_text":{"type":"string","title":"Action Text"},"action_date":{"type":"string","format":"date-time","title":"Action Date"}},"type":"object","required":["id","action_text","action_date"],"title":"TaskHistoryBase"},"TaskOut":{"properties":{"id":{"type":"integer","title":"Id"},"project_id":{"type":"integer","title":"Project Id"},"project_task_index":{"type":"integer","title":"Project Task Index"},"project_task_name":{"type":"string","title":"Project Task Name"},"outline_geojson":{"$ref":"#/components/schemas/geojson_pydantic__features__Feature"},"outline_centroid":{"$ref":"#/components/schemas/geojson_pydantic__features__Feature"},"task_status":{"$ref":"#/components/schemas/TaskStatus"},"locked_by_uid":{"type":"integer","title":"Locked By Uid"},"locked_by_username":{"type":"string","title":"Locked By Username"},"task_history":{"items":{"$ref":"#/components/schemas/TaskHistoryBase"},"type":"array","title":"Task History"},"task_status_str":{"$ref":"#/components/schemas/TaskStatusOptions"}},"type":"object","required":["id","project_id","project_task_index","project_task_name","outline_geojson","outline_centroid","task_status","locked_by_uid","locked_by_username","task_history","task_status_str"],"title":"TaskOut"},"TaskStatus":{"type":"integer","enum":[0,1,2,3,4,5,6,7,8],"title":"TaskStatus","description":"Enum describing available Task Statuses."},"TaskStatusOptions":{"type":"string","enum":["READY","LOCKED_FOR_MAPPING","MAPPED","LOCKED_FOR_VALIDATION","VALIDATED","INVALIDATED","BAD","SPLIT","ARCHIVED"],"title":"TaskStatusOptions"},"User":{"properties":{"username":{"type":"string","title":"Username"},"id":{"type":"integer","title":"Id"}},"type":"object","required":["username","id"],"title":"User"},"UserOut":{"properties":{"username":{"type":"string","title":"Username"},"id":{"type":"integer","title":"Id"},"role":{"type":"string","title":"Role"}},"type":"object","required":["username","id","role"],"title":"UserOut"},"UserRoles":{"properties":{"user_id":{"type":"integer","title":"User Id"},"organization_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Organization Id"},"project_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Project Id"},"role":{"type":"string","title":"Role"}},"type":"object","required":["user_id","role"],"title":"UserRoles"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"},"app__projects__project_schemas__Feature":{"properties":{"id":{"type":"integer","title":"Id"},"project_id":{"type":"integer","title":"Project Id"},"task_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Task Id"},"geometry":{"anyOf":[{"$ref":"#/components/schemas/geojson_pydantic__features__Feature"},{"type":"null"}]}},"type":"object","required":["id","project_id","task_id","geometry"],"title":"Feature"},"geojson_pydantic__features__Feature":{"type":"object","title":"Feature","description":"Feature Model"}}}}