{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83e\udd17 Welcome To The Field Mapping Documentation \ud83e\udd17","text":""},{"location":"#what-is-one-thing-all-the-greatest-solutions-out-there-have-in-common","title":"What is ONE thing all the greatest solutions out there have in common?","text":"<p>They never forget the people they are building for (^^) </p> <p>So who are we building field mapping solutions for? In short, we build solutions for:</p>"},{"location":"#the-field-mapping-manager-coordinating-field-mapping","title":"The field mapping manager (coordinating field mapping)","text":"<p>The field mapping manager is responsible for coordinating field mapping activities, ensuring the accuracy and completeness of the data collected, and managing the data itself. This involves a number of key steps, including:</p> <ul> <li> <p>Planning: The field mapping manager must develop a clear plan   for the data collection process, including identifying key areas of   focus and establishing timelines and targets.</p> </li> <li> <p>Recruitment: The field mapping manager must recruit and train   field mappers, ensuring that they have the necessary skills and   expertise to collect accurate and high-quality data.</p> </li> <li> <p>Coordination: The field mapping manager must coordinate the activities   of the field mappers, ensuring that they are working together   effectively and efficiently.   </p> </li> </ul>"},{"location":"#the-field-mapper-collecting-data","title":"The field mapper (collecting data)","text":"<p>The field mapper is responsible for collecting data in the field. To ensure the success of the field mapper, we must consider a number of key factors. These include:</p> <ul> <li> <p>Ease of use: The field mapper must be able to easily and efficiently   collect data, without requiring extensive training or technical   expertise.</p> </li> <li> <p>Accessibility: The field mapper must be able to access and   collect data from a wide range of environments, including remote or   hard-to-reach locations.</p> </li> <li> <p>Data quality: The field mapper must be able to ensure the accuracy and   completeness of the data they collect, as well as identify and address   any errors or issues that arise.</p> </li> </ul>"},{"location":"#the-validator-quality-checking-the-data","title":"The validator (quality checking the data)","text":"<p>The validator is responsible for quality checking the data collected by the field mapper, ensuring that it is accurate, complete, and free from errors. The validator faces a number of challenges and issues, including:</p> <ul> <li> <p>Incomplete or inaccurate data: The validator must identify and   address any data that is incomplete, inaccurate, or otherwise flawed.</p> </li> <li> <p>Conflicting data: The validator may encounter data that   conflicts with other data sources, requiring them to identify and   resolve any discrepancies.</p> </li> <li> <p>Data validation protocols: The validator must adhere to strict   validation protocols and guidelines, ensuring that the data meets a high   level of quality and accuracy.</p> </li> </ul> <p>Click here to see an overview of who you are building for, which actions they take and some ideas for solutions!</p> <p>Below is an overview of the user flow of the Field Mapper, the Mapping Coordinator / Field Mapping Manager and the Validator.</p>"},{"location":"#the-field-mapping-manager-the-person-who-coordinates-field-mapping","title":"The Field Mapping Manager (The person who coordinates field mapping)","text":"<p>The Field Mapping Manager is tasked with coordinating all mapping activities, ensuring that Field Mappers are safe and qualified to work, as well as monitoring data quality. The Field Mapping Manager has to consider 3 main activities:</p> <ol> <li>Pre-field data collection activities</li> <li>Setting up and testing tools</li> <li>Creating a form</li> <li>Training field mappers (making sure that they understand the form and how to fill it)</li> <li>Creating an area of interest within the location to be mapped</li> <li>Data collection activities</li> <li>Preparing daily, weekly and monthly activity plans</li> <li>Deploying team (assessing safety and qualifications of mappers)</li> <li>Data quality monitoring</li> <li>Post-field data collection activities</li> <li>Daily review of data</li> <li>Giving and recieving team feedback</li> <li>Updating tools and methodoligies</li> </ol> <p>If you want more information, click on this virtual whiteboard! to see all the steps a Field Mapping Coordinator or Manager goes through. Here's a sneak-peek:</p> <ul> <li>See also data collection approach &gt;&gt;in this training guide&lt;&lt;</li> </ul> <p></p>"},{"location":"#the-field-mapper-the-person-who-collects-data","title":"The Field Mapper (The person who collects data)","text":"<p>The Field Mapper surveys locations and collects data from them. The basic work flow that a Field Mapper has to consider is as follows:</p> <ol> <li>Find a phone that:</li> <li>Works well with the app.</li> <li>Has mobile data or an internet plan.</li> <li>Install all necessary apps on the phone.</li> <li>Access the OSM registration site and register.</li> <li>Follow the tutorial and choose a campaign.</li> <li>Select a task from the campaign.</li> <li>Launch the map app which allows you to see the moving map of the points that you are now responsible for.</li> <li>Complete each point within the task, making sure to answer the questions in the form for each one.</li> <li>Send the data of each point until the task is complete.</li> <li>Once the task is complete, signal that your task is finished. This lets the Validator know that they can check the quality of your data.</li> </ol> <p>If you want to see this workflow in more detail, click on this virtual whiteboard! Here's a sneak-peek:</p> <p></p>"},{"location":"#the-validator-the-person-who-checks-the-quality-of-data-collected","title":"The Validator (The person who checks the quality of data collected)","text":"<p>The Validator does the following tasks to ensure that quality data is collected and uploaded to OSM:</p> <ul> <li>Logs into task manager</li> <li>Checks how many tasks need validation</li> <li>Checks tasks for errors</li> <li>Stops mappers that make mistakes and explains how they can fix their errors</li> <li>Lowers supervision on good mappers in order to spend more time on those who are stuggling</li> <li>Uploads high quality data to OSM and marks completed tasks as done</li> </ul> <p>Some of the pain points and struggles faced by the Validator include:</p> <ul> <li>Lack of validators (the Validator is often the same person as the Field Mapping Manager)</li> <li>Many areas of the world are still unmapped on online commercial maps</li> <li>The quality of maps needs to improve</li> <li>The more developers complicate tools, the more they reduce the usefulness of the tools</li> </ul> <p>For more details, click on this virtual whiteboard! See sneak-peek below.</p> <ul> <li>See also all steps of validation &gt;&gt;in this training guide&lt;&lt;</li> <li>See also global validator Becky's OSM diary which features:   \"Common Feedback I give while Validating Building Projects\"</li> </ul> <p></p> <p>Some of the key points covered are:</p> <ul> <li>Understanding the mapping project and the intended use of the collected data</li> <li>Verifying the accuracy and completeness of the collected data</li> <li>Ensuring consistency with existing data and standards</li> <li>Providing clear and constructive feedback to field mappers and coordinators</li> </ul> <p>Overall, understanding the needs and considerations of each of these three user groups is essential for building effective field mapping solutions.</p>"},{"location":"About/","title":"About","text":""},{"location":"About/#field-mapping-tasking-manager-fmtm","title":"Field Mapping Tasking Manager (FMTM)","text":""},{"location":"About/#history","title":"\ud83d\udcd6 History","text":"<p>How was FMTM born ?  It started as Ivan's idea to build FMTM (Ivan Gayton is Senior Humanitarian Advisor at Humanitarian OpenStreetMap Team) which then became a collaborative project with the efforts of Ivan , Rob Savoye who is Senior Technical Lead at Humanitarian OpenStreetMap Team and many other members from HOT as well as volunteers interested in the project. HOT uses ODK heavily, but most of the data never makes it into OSM because all the data processing is manual and slow, so it doesn't get done. Ivan Gayton(Senior Humanitarian Advisor at Humanitarian OpenStreetMap Team) heard about what Rob was working on and goes \"That's the missing piece I needed!\". He'd been wanting to build FMTM for years, but lacked the ability to process the data.A webinar then took place in September 2022 that showcased the high interest from the community and the need for collaborative field mapping that really kicked off the starting point for building the Field Mapping Tasking Manager. It was Ivan who got HOT interested enough to direct some resources to his idea, so FMTM was born.</p> <p>Want to know about OSM-fieldwork project ? Click here </p>"},{"location":"About/#a-project-to-provide-tools-for-open-mapping-campaigns","title":"A project to provide tools for Open Mapping campaigns","text":"<p>The Field Mapping Tasking Manager (FMTM) is a project that aims to provide tools for coordinating field mapping activities in Open Mapping campaigns. While there are existing field mapping applications, there is a lack of efficient tools to coordinate these activities. The FMTM builds on the HOT Tasking Manager and other mapping applications to provide a more streamlined and organized process for completing mapping tasks.</p> <p>Currently, it is possible to implement a Field Mapping Tasking Manager workflow using existing tools, but it requires significant effort and can be challenging. The FMTM project is developing automation features to address these challenges and make the process more accessible to users.</p> <p>By providing a centralized platform for organizing and managing mapping tasks, assigning them to specific users, and tracking their progress, the FMTM aims to simplify the coordination of mapping activities. The tool also provides analytics and reporting features, allowing users to gain insights into mapping campaigns and adjust their strategies accordingly.</p> <p>Background and description of the project and idea are here: please have a look at this blog if you haven't yet!</p>"},{"location":"About/#how-to-contribute","title":"How to contribute","text":"<p>The FMTM project is open source and community-driven, welcoming contributions from designers, user testers, and both front-end and back-end developers. If you're interested in getting involved, please see our contributor guidelines for more information. We welcome questions and feedback, so don't hesitate to reach out to us. \ud83d\udc4d\ud83c\udf89</p>"},{"location":"About/#using-opendatakits-select-from-map-feature","title":"Using OpenDataKit's Select From Map feature","text":"<p>OpenDataKit's Select From Map feature is a useful tool for field mappers to collect data in a well-structured questionnaire format. The tool was incorporated into ODK in mid-2022 and allows mappers to select an object from a map, view its existing attributes, and fill out a form with new information and attributes.</p> <p>To prepare map files for ODK, inspiration is taken from the HOT Tasking Manager, which allows remote mappers to choose well-defined small \"task\" areas, ensuring full coverage of the project area and no unintended duplication of tasks. For example, a mapper can approach a building, select that building from a map view within ODK on their mobile phone, and add the opening hours, number of floors, construction material, or any number of useful attributes in a well-structured questionnaire format</p> <p>To prepare the appropriate map files for ODK, we are taking our inspiration from the HOT Tasking Manager, which allows remote mappers to choose well-defined small \"task\" areas, ensuring full coverage of the project area and no unintended duplication of tasks.</p>"},{"location":"About/#users","title":"Users","text":"<p>There are three main user roles for using ODK's Select From Map feature: campaign managers, field mappers, and validators.</p>"},{"location":"About/#campaign-managers","title":"Campaign managers","text":"<p>Campaign managers select an Area of Interest (AOI) and organize field mappers to go out and collect data. They need to:</p> <p></p> <ul> <li>Select an AOI polygon by creating a GeoJSON or by tracing a polygon in a Web map</li> <li>Choose a task division scheme (number of features or area per task, and possible variations on what features to use as the preferred splitting lines)</li> <li>Provide specific instructions and guidance for field mappers on the project.</li> <li>Provide a URL to a mobile-friendly Web page where field mappers can, from their mobile phone, select a task that is not already \"checked out\" (or possibly simply allocate areas to the field mappers).</li> <li>See the status of tasks (open, \"checked out\", completed but not validated, requires to rework, validated, etc) in the Web browser on their computer</li> </ul>"},{"location":"About/#field-mappers","title":"Field mappers","text":"<p>Field mappers select (or are allocated) individual tasks within a project AOI and use ODK Collect to gather data in those areas. They need to:</p> <ul> <li>Visit a mobile-friendly Web page where they can see available tasks on a map</li> <li>Choose an area and launch ODK Collect with the form corresponding to their allocated area pre-loaded</li> </ul>"},{"location":"About/#validators","title":"Validators","text":"<p>Validators review the data collected by field mappers and assess its quality. If the data is good, the validators merge the portion of the data that belongs in OpenStreetMap to OSM. If it requires more work, the validators either fix it themselves (for minor stuff like spelling or capitalization mistakes that don't seem to be systematic) or inform the field mappers that they need to fix it. They need to:</p> <ul> <li>Access completed data sets of \"submissions\" as Comma Separated Values and/or OSM XML so that they can review them.</li> <li>Mark areas as validated or requiring rework</li> <li>Communicate with field mappers if rework is necessary</li> <li>Merge good-quality data into OSM (probably from JOSM).</li> <li>Mark areas as completed and merged.</li> </ul>"},{"location":"About/#info-for-developers","title":"Info for developers","text":"<p>For this visit the Getting Started Page.</p>"},{"location":"CODE_OF_CONDUCT/","title":"\ud83d\udcdc Code of conduct","text":"<p>(The latest version can be found at https://www.hotosm.org/code-of-conduct)</p> <p>Welcome to Humanitarian OpenStreetMap Team. HOT is committed to providing a welcoming and safe environment for people of all races, gender identities, gender expressions, sexual orientations, physical abilities, physical appearances, socio-economic backgrounds, nationalities, ages, religions, and beliefs.</p> <p>The HOT community principles are:</p> <ul> <li> <p>Be friendly and patient. Be generous and kind in both giving and accepting critique. Critique is a natural and important part of our culture. Good critiques are kind, respectful, clear, and constructive, focused on goals and requirements rather than personal preferences. You are expected to give and receive criticism with grace. Be considerate in speech and actions, and actively seek to acknowledge and respect the boundaries of fellow attendees.</p> </li> <li> <p>Be welcoming. We strive to be a community that welcomes and supports people of all backgrounds and identities. Some examples of behavior that contributes to creating a positive environment include:</p> </li> <li> <p>Using welcoming and inclusive language.</p> </li> <li> <p>Being respectful of differing viewpoints and experiences.</p> </li> <li> <p>Gracefully accepting constructive criticism.</p> </li> <li> <p>Showing empathy towards other community members.</p> </li> <li> <p>Placing collective interest before your own interest.</p> </li> <li> <p>Be considerate. Your work will be used by other people, and you in turn will depend on the work of others. Any decision you take will affect users and colleagues, and you should take those consequences into account when making decisions. Remember that we're a world-wide community, so you might not be communicating in someone else's primary language.</p> </li> <li> <p>Be respectful. Not all of us will agree all the time, but disagreement is no excuse for poor behavior and poor manners. We might all experience some frustration now and then, but we cannot allow that frustration to turn into a personal attack. It\u2019s important to remember that a community where people feel uncomfortable or threatened is not a productive one. Members of the HOT community should be respectful when dealing with other members as well as with people outside the HOT community.</p> </li> <li> <p>Be careful in your word choice. We are a global community of professionals, and we conduct ourselves professionally. Be kind to others. Do not insult or put down other participants. Harassment and other exclusionary behavior aren't acceptable. This includes, but is not limited to:</p> </li> <li> <p>Violent threats or language directed against another person.</p> </li> <li> <p>Discriminatory jokes and language.</p> </li> <li> <p>Posting sexually explicit or violent material.</p> </li> <li> <p>Posting (or threatening to post) other people's personally identifying information (\"doxing\").</p> </li> <li> <p>Personal insults, especially those using racist or sexist terms.</p> </li> <li> <p>Unwelcome sexual attention.</p> </li> <li> <p>Advocating for, or encouraging, any of the above behavior.</p> </li> <li> <p>Repeated harassment of others. In general, if someone asks you to stop, then stop.</p> </li> <li> <p>Assume all communications are positive. Always remain polite, and assume good faith. It is surprisingly easy to misunderstand each other, be it online or in person, particularly in such a culturally diverse setting as ours. Misunderstandings are particularly easy to arise when we are in a rush, or otherwise distracted. Please ask clarifying questions before assuming that a communication was inappropriate.</p> </li> <li> <p>When we disagree, try to understand why. Disagreements, both social and technical, happen easily and often. It is important that we resolve such disagreements and differing views constructively. At times it can be hard to appreciate a viewpoint that contradicts your own perceptions. Instead of pushing back, try to understand where the other person is coming from, and don\u2019t be afraid to ask questions. You can be most helpful if your own replies serve to clarify, rather than to escalate an issue. Also don\u2019t forget that it can be easy to make mistakes, and allow for the possibility that the mistake may have been yours. When this happens it is better to resolve the issue together, and to learn from the experience together, than to place blame.</p> </li> </ul> <p>Original text courtesy of the Speak Up! project.</p> <p>Further sources:</p> <ul> <li> <p>Ada Initiative: HOWTO design a code of conduct for your community</p> </li> <li> <p>Algorithm Club Code of Conduct</p> </li> <li> <p>American Red Cross GIS Team Code of Conduct</p> </li> <li> <p>Contributor Covenant \u2013 A Code of Conduct for Open Source Projects</p> </li> <li> <p>Django Code of Conduct</p> </li> <li> <p>Mozilla Community Participation Guidelines</p> </li> <li> <p>Vox Media Code of Conduct</p> </li> </ul>"},{"location":"CODE_OF_CONDUCT/#complaint-handling-process","title":"Complaint Handling Process","text":"<p>As a first measure, it is preferable to work out issues directly with the people involved, or to work with other Community Members who can help you resolve the issue. This may take several forms:</p> <ul> <li> <p>Talk with one another. Assume that communications are positive and that people are treating each other with respect. Cues about emotions are often lacking from digital communications. Many of our modes of digital communication tend towards brevity, which can be easier to interpret incorrectly as being negative.</p> </li> <li> <p>Contact a representative of the Community Working Group, which exists to support the HOT Community. Representatives are available to discuss any concerns about behaviour within the community, or ideas to promote positive behaviours. You can email them at community@hotosm.org.</p> </li> <li> <p>Contact a representative of the Governance Working Group, which drafted these recommendations and the CoC. Representatives are available to provide advice on particular scenarios, as well as on the processes around the CoC.</p> </li> <li> <p>Contact the HOT Chair of Voting Members.</p> </li> <li> <p>Contact a HOT Board Member. Board members are well versed in the community and its management. They can offer advice on your particular situation, and know the resources of the organization that may be available to you.</p> </li> <li> <p>Contact the HOT Community Partnerships Manager.</p> </li> </ul> <p>When these informal processes fail, or when a situation warrants an immediate response by HOT, you can evoke the HOT Policy and Code of Conduct Complaint Handling Process. This process was adopted by HOT Voting Members in 2016 to provide a more formal means of enforcement for our community standards. You start it by emailing complaints@hotosm.org with a description of your complaint, your name, and the name of the offending party. All complaints will be considered confidential. The full process is described here .</p>"},{"location":"CONTRIBUTING/","title":"Contribution Guidelines","text":""},{"location":"CONTRIBUTING/#welcome","title":"\ud83e\udd17 Welcome","text":"<p> First off, We are really glad you're reading this, because we need volunteer developers to help improve the Field Mapping Tasking Manager (FMTM)! </p> <p>We welcome and encourage contributors of all skill levels, and we are committed to making sure your participation is inclusive, enjoyable, and rewarding. If you have never contributed to an open source project before, we are a good place to start, and we will make sure you are supported every step of the way. If you have any questions, please ask!</p> <p>You can see an overview of the project and the process we have gone through in developing FMTM so far in these slides .</p> <p>Furthermore, there are many ways to contribute to the Field Mapping Tasking Manager (FMTM), which includes:</p>"},{"location":"CONTRIBUTING/#testing","title":"Testing","text":"<p>Right now, we are in the process of building the prototype. We warmly welcome your input in testing and sharing your feedback. If you are also interested in coordinating a field testing session, please reach out!</p>"},{"location":"CONTRIBUTING/#code-contributions","title":"Code contributions","text":"<p>Create pull requests (PRs) for changes that you think are needed. We would really appreciate your help!</p> <p>In fact, we are specifically looking for input from developers with Python skills and familiarity with Fast API.</p>"},{"location":"CONTRIBUTING/#report-bugs-and-suggest-improvements","title":"Report bugs and suggest improvements","text":"<p>The issue queue is the best way to get started. There are issue templates for BUGs and FEATURES that you can use, you could also create your own. Once you have submitted an issue, it will be assigned one label from the following label categories. If you are wondering where to start, you can filter by the good first issue label.</p>"},{"location":"CONTRIBUTING/#thank-you","title":"Thank you","text":"<p>Thank you very much in advance for your contributions!! Please ensure you refer to our Code of Conduct. If you've read the guidelines, but are still not sure how to contribute on Github, please reach out to us via our Slack #geospatial-tech-and-innovation.</p>"},{"location":"CONTRIBUTING/#code-contribution-guidelines","title":"Code Contribution guidelines","text":""},{"location":"CONTRIBUTING/#workflow","title":"Workflow","text":"<p>We operate the \"Fork &amp; Pull\" model explained at About Pull Requests</p> <p>You should fork the project into your own repo, create a topic branch there and then make one or more pull requests back to the repository. Your pull requests will then be reviewed and discussed by other developers. Don't submit a Pull Request while still developing the code, wait till the feature is complete and ready for review. A preliminary review by other developers can be requested via the comments for the issue on github, or via slack or email.</p> <p>It is prefered that all patches contain any documentation updates made, and for any new features, a test case is preferred when possible. Keep patches focused on a single feature to avoid merging complications with other developers. The old free software joke is \"patches are better than bug reports\" is how we contribute to the community of people involved with this project.</p>"},{"location":"CONTRIBUTING/#if-you-are-reporting-a-problem","title":"If you are reporting a problem","text":"<ul> <li> <p>Describe exactly what you were trying to achieve, what you did, what you   expected to happen and what did happen instead. Include relevant information   about the platform, OS version etc. you are using. Include shell commands you   typed in, log files, errors messages etc.</p> </li> <li> <p>Please open a separate issue for each problem, question, or comment you have.   Do not re-use existing issues for other topics, even if they are similar. This   keeps issues small and manageable and makes it much easier to follow through   and make sure each problem is taken care of.</p> </li> </ul>"},{"location":"CONTRIBUTING/#documentation","title":"Documentation","text":"<p>Project documentation should be in Markdown format, and in a docs subdirectory. While it is possible to use HTML in Markdown documents for tables and images, it is prefered to use the Markdown style as it's much easier to read.</p>"},{"location":"CONTRIBUTING/#coding-style","title":"Coding Style","text":"<p>Python enforces a certain amount of style due to indent levels. Unlike C/C++, we don't have to worry about curly braces. It is prefered that all code follows object oriented techniques, with a minimal amount of code other than basic control in the main function. This allows code to be easily reused and run either standalone, or part of a REST API backend. Code that is not designed to be run standalone can have a main function to do simple testing during development. That test code should be moved to a standalone test case when possible. Pytest is used as the test framework for standalone test cases.</p> <p>Code follows a CamelCase style. Classes use an Upper Case for the first word, method use a lower case for the first word. Variable names are all lower case with an underbar as a word separator. Properly naming everything makes it much easier to read the code and get an idea of what it is doing. This enables people new to this project to contribute easier.</p> <p>All methods should have a comment that can be used by pydoc. The usage of base classes is encouraged so functionality can be shared. Comments in the code are encouraged when necessary to explain code that may not be obvious, but avoid over commenting as well. Code should be able to be read like a book, with descriptive names used, no fancy tricks unless required. Always be concious of performance and security.</p>"},{"location":"FAQ/","title":"FAQ","text":""},{"location":"FAQ/#frequently-asked-questions","title":"Frequently Asked Questions","text":""},{"location":"FAQ/#for-users","title":"For Users","text":"<p>Q: What is FMTM?</p> <p>A: FMTM stands for Field Monitoring Task Manager. It is a web-based application that facilitates remote monitoring of field activities for humanitarian organizations.</p> <p>Q: Do I need to create an account to use the FMTM Web App?</p> <p>A: No, you can use the FMTM Web App without creating an account, but creating an account allows you to contribute to mapping projects and access additional features.</p> <p>Q: How do I browse and select mapping projects on the FMTM Web App?</p> <p>A: You can browse and select mapping projects on the FMTM Web App by clicking on the \"Projects\" tab and selecting a project of interest. You can view project details, tasks, and mapping data on the project page.</p> <p>Q: How do I contribute to a mapping project on the FMTM Web App?</p> <p>A: To contribute to a mapping project on the FMTM Web App, you can create an account, select a project of interest, and choose a task to work on. You can then use the mapping tools provided to complete the task.</p> <p>Q: Can I work on multiple mapping tasks at the same time on the FMTM Web App?</p> <p>A: Yes, you can work on multiple mapping tasks at the same time on the FMTM Web App, as long as you can commit the necessary time and effort to each task.</p> <p>Q: How do I know if my mapping work on the FMTM Web App is accurate?</p> <p>A: The FMTM Web App has a validation process where other contributors review and validate the mapping work. This helps to ensure the accuracy of the mapping data.</p> <p>Q: Can I provide feedback on a mapping project on the FMTM Web App?</p> <p>A: Yes, you can provide feedback on a mapping project on the FMTM Web App by leaving a comment on the project page or contacting the project manager.</p> <p>Q: How do I download mapping data from a project on the FMTM Web App?</p> <p>A: To download mapping data from a project on the FMTM Web App, you can select the project of interest and click on the \"Export\" button on the project page.</p> <p>Q: Can I use the mapping data from the FMTM Web App for my own research or projects?</p> <p>A: The mapping data on the FMTM Web App is generally open and available for use, but it is important to check the specific project requirements and licenses before using the data for your own research or projects.</p>"},{"location":"FAQ/#for-contributors","title":"For Contributors","text":"<p>Q: What is the Field Mapping Tasking Manager (FMTM)?</p> <p>A: The Field Mapping Tasking Manager (FMTM) is an online platform that allows contributors to participate in mapping projects related to humanitarian and development work.</p> <p>Q: How can I become a contributor to the FMTM?</p> <p>A: To become a contributor to the FMTM, you can create an account on the platform and join a mapping project.</p> <p>Q: Who can contribute to FMTM?</p> <p>A: Anyone can contribute to FMTM. It is an open-source project, and contributions from developers, designers, and other contributors are always welcome.</p> <p>Q: What kind of contributions can I make to FMTM?</p> <p>A: There are several ways you can contribute to FMTM, including:</p> <p>Development: If you have experience in web development, you can contribute by fixing bugs, adding new features, or improving the existing codebase.</p> <p>Design: If you are a designer, you can contribute by improving the user interface, creating new design assets, or providing feedback on the existing design.</p> <p>Documentation: If you have experience in technical writing, you can contribute by writing documentation, tutorials, or other educational materials.</p> <p>Testing: If you have experience in software testing, you can contribute by testing the application and reporting bugs or suggesting improvements.</p> <p>Translation: If you are fluent in a language other than English, you can contribute by translating the application or its documentation into your language.</p> <p>Q: What technologies are used in FMTM?</p> <p>A: FMTM is built using several technologies, including Django, Postgres, Redis, Celery, and Vue.js. The codebase is written in Python, HTML, CSS, and JavaScript.</p> <p>Q: How do I set up FMTM locally?</p> <p>A: To set up FMTM locally, you need to have Python, Postgres, Redis, and Node.js installed on your system. You can follow the instructions in the README file of the FMTM repository to set up the project.</p> <p>Q: How can I report a bug or suggest a new feature for FMTM?</p> <p>A: You can report bugs or suggest new features by opening an issue on the FMTM repository on GitHub. Be sure to provide as much detail as possible, including steps to reproduce the bug, screenshots, or mockups for new features.</p> <p>Q: How can I contribute to FMTM if I'm new to open source or web development?</p> <p>A: FMTM welcomes contributions from developers of all levels of experience, including those who are new to open source or web development. You can start by exploring the project's codebase and documentation, asking questions in the community, and contributing to issues labeled as \"good first issue.\" Additionally, you can join the FMTM community on Slack to connect with other contributors and get help with your contributions.</p> <p>Q: What are the benefits of contributing to the FMTM?</p> <p>A: Contributing to the FMTM allows you to help with important humanitarian and development work, while also developing your mapping skills and knowledge.</p> <p>Q: Do I need to have prior mapping experience to contribute to the FMTM?</p> <p>A: No, prior mapping experience is not required to contribute to the FMTM. The platform provides training and resources to help new contributors get started.</p> <p>Q: How do I know which mapping project to join?</p> <p>A: The FMTM provides information about each project, including the location, the organization sponsoring the project, and the mapping goals. Review the project information and choose a project that interests you.</p> <p>Q: Can I work on multiple mapping projects at the same time?</p> <p>A: Yes, you can work on multiple mapping projects at the same time. However, it is important to ensure that you can commit the necessary time and effort to each project.</p> <p>Q: How do I get feedback on my mapping work?</p> <p>A: The FMTM provides a validation process where other contributors review and provide feedback on mapping work. You can also contact project managers or experienced contributors for additional feedback.</p> <p>Q: How can I improve my mapping skills?</p> <p>A: The FMTM provides training and resources to help you improve your mapping skills. You can also join mapping communities and forums to connect with other contributors and learn from their experiences.</p> <p>Q: Can I use the mapping data for my own research or projects?</p> <p>A: The mapping data on the FMTM is generally open and available for use, but it is important to check the specific project requirements and licenses before using the data for your own research or projects.</p>"},{"location":"Guide-On-Improving-Documentation/","title":"Structures To Improve GitHub Documentation","text":""},{"location":"Guide-On-Improving-Documentation/#overview","title":"Overview","text":"<p>An overall documentation structure outline, that cuts across; Project, Product, System and Process documentation. These structures can be replicated for all forms of documentation needed by HOTOSM. It also includes specific tips for improving already existing documentation.</p>"},{"location":"Guide-On-Improving-Documentation/#goals","title":"Goals","text":"<ol> <li>Highlight the definitions of each type of documentation that are    commonly used on Github.</li> <li>Provide a foundation to lay information on top of, in order to    produce efficient documentation about any product or project in the    future.</li> <li>List key parts of each documentation type that aid the flow and    experience of the reader.</li> <li>Outline general tips to improve already existing documentation.</li> </ol>"},{"location":"Guide-On-Improving-Documentation/#common-documentation-types-on-github","title":"Common Documentation Types On Github","text":"<p>I have found 4 main documentation types through my own personal research. They can all be written individually but often coincide to complement specific parts of each other. For example, Product documentation may include some Process documentation under the Usage section, demonstrating how to use that product. These 4 types in full, are as follows:</p> <ul> <li>Product Documentation </li> <li>Project Documentation</li> <li>System Documentation</li> <li>Process Documentation</li> </ul>"},{"location":"Guide-On-Improving-Documentation/#1-structure-for-product-documentation","title":"1. Structure for Product Documentation","text":"<p>Product documentation is the process of recording key information (almost everything you need to know) about a product,  including how to use it. Product documentation may have form of Process documentation within it (this will be further explained later on). A flexible and reusable structure of essential components of product documentation is as follows: - Overview - Introduction: What the product is, what it does, the target audience, etc. - Features: A breakdown of each integral part of the product, their   functionality and purpose - Benefits: How the features give users an edge over other similar   products. In other words, what\u2019s in it for the user. - Usage: A step by step process of how to use the product - Support / Frequently Asked Questions (about the product) - License</p> <p>The points stated above can be used in that order and can also be switched around based on convenience and the type of product. Additionally, other points can be added if necessary, but these are what I believe to be some of the most important.</p>"},{"location":"Guide-On-Improving-Documentation/#2-structure-for-project-documentation","title":"2. Structure for Project Documentation","text":"<p>Project documentation is the process of recording the key project details that are needed to implement a project. It\u2019s like a roadmap of what the project is and all necessary information about what it entails. Main structural components are in the following order: - Overview - Vision - Aim / Mission - Introduction - Project plan - Project schedule - Tools and Features - Access - Resources - Support / Guidelines</p>"},{"location":"Guide-On-Improving-Documentation/#3-structure-for-system-documentation","title":"3. Structure for System Documentation","text":"<p>System documentation is an all-encompassing record of details of a full working system. It is very similar to the structure of product documentation but it\u2019s usually on a wider scale. It may even include some forms of product and process documentation within it. In addition to the structure of product documentation above, other key components it might include are: architecture design, program source code and maintenance / help guide.</p>"},{"location":"Guide-On-Improving-Documentation/#4-structure-for-process-documentation","title":"4. Structure for Process Documentation","text":"<p>Process documentation is capturing and listing all steps involved in doing a task. It is the full explanation of a process, step by step. Process documentation is very useful in other documentation forms. As mentioned earlier, it can be used within System, Product or Project documentation, to explain a process. The format is usually: - Overview - Introduction - Explanation steps (breakdown of the task) - Help (if any problems occur while acting on the steps)</p> <p>The structures I have suggested above are similar, consistent and can be easily replicated for various projects, systems and products. They work well when integrated together, balancing out issues where necessary. Each structure also serves as a foundation that can be added to and built upon.</p>"},{"location":"Guide-On-Improving-Documentation/#improving-existing-documentation","title":"Improving Existing Documentation","text":"<ol> <li> <p>Acronyms should be stated in full before repetitive    use. Acronyms like ODK, OSM, etc, should be stated in full before    use or after each use within brackets e.g ODK (Open Data Kit). This    negates confusion for readers / users and just simplifies things.</p> </li> <li> <p>Important features should be put in bold. For example \u201cselect    from map\u201d and \u2018\u2019ODK Collect\u201d can be easily overlooked by readers if    they aren't highlighted, even though they are important features.</p> </li> <li> <p>Generally simplifying words and phrases. This makes    documentation more user friendly and much easier to understand,    since users come from all different backgrounds. For example:</p> <p>\u201cODK incorporates a new functionality\u201d can become \u201cODK has brought in a new feature\u201d.</p> <p>\u201cField Mappers select (or are allocated) individual tasks within a project\u2019s AOI\u201d could be changed to \u201cField Mappers choose or are given tasks that are part of a project\u2019s Areas Of Interest.\u201d</p> </li> <li> <p>Avoid long paragraphs. Short paragraphs that pass a clear     message are less clumsy and flustering for readers. Breaking down     topics into little, easy to understand chunks, is more user     friendly.</p> </li> <li> <p>Maintain a positive tone in the writing.. Keep the text    positive and informative. Avoid words like \u2018obviously\u2019 and    \u2018basically\u2019,  that may be interpreted as demeaning or    condescending. Do not expect readers to have a certain amount of    knowledge on specific aspects, break down everything that needs to    be broken down.</p> </li> <li> <p>Constantly update your documentation. Projects, products and    systems are always evolving. Thus, it is necessary to keep    documentation up to date with any new changes.</p> </li> <li> <p>Consistency in the documentation format. Maintaining    consistency is a key aspect of creating clear and effective    documentation.This consistency includes but is not limited to    elements like numbering, font styles, heading sizes, and spacing.</p> <p>Using the same font for all headings and subheadings can help readers quickly identify important sections of the document. Similarly, using consistent spacing between paragraphs and sections can make the document more visually appealing and easier to follow. This helps to create a documentation that is clear, effective, and easy to use.</p> </li> </ol>"},{"location":"INSTALL/","title":"Installation","text":"<p>NOTE: This is an installation guide to quickly get the fmtm app up and running. For a detailed guide on how to install the fmtm app using different methods and contributing, checkout the docs</p>"},{"location":"INSTALL/#table-of-contents","title":"Table of Contents","text":"<ol> <li> <p>Software Requirements</p> </li> <li> <p>Setting up the Backend</p> </li> <li> <p>Fork and Clone the FMTM repository</p> </li> <li>Development: Setup Your Local Environment</li> <li>Start the API with Docker</li> <li>Setup ODK Central User</li> <li>Import Test Data</li> <li> <p>Check Authentication</p> </li> <li> <p>Setting up the Frontend</p> </li> <li> <p>Fork and Clone the FMTM repository</p> </li> <li>The Microfrontend configuration</li> <li>Start the Frontends with Docker</li> </ol>"},{"location":"INSTALL/#1-software-requirements","title":"1. Software Requirements","text":"<p>Before you can install and use this application, you will need to have the following software installed and configured on your system</p> <ul> <li>Git(or any other Terminal)</li> <li>Docker</li> </ul> <p>To install Git, please follow the instructions on the official Git website:</p> <pre><code>https://git-scm.com/downloads\n</code></pre> <p>To install Docker, please follow the instructions on the official Docker website:</p> <pre><code>https://docs.docker.com/engine/install/\n</code></pre>"},{"location":"INSTALL/#2-setting-up-the-backend","title":"2. Setting up the Backend","text":""},{"location":"INSTALL/#fork-and-clone-the-fmtm-repository","title":"Fork and Clone the FMTM repository","text":""},{"location":"INSTALL/#1-fork-the-repository","title":"1. Fork the repository","text":"<p>Forking creates a copy of the repository in your own GitHub account. Go to the Field Mapping Tasking Manager repository and click the \"Fork\" button in the top right corner of the page.</p>"},{"location":"INSTALL/#2-clone-the-forked-repository","title":"2. Clone the forked repository","text":"<p>Clone the forked repository to your local machine using the following command:</p> <p><code>git clone https://github.com/&lt;your-username&gt;/fmtm.git</code></p> <p>Make sure to replace <code>&lt;your-username&gt;</code> with your GitHub username.</p>"},{"location":"INSTALL/#development-setup-your-local-environment","title":"Development: Setup Your Local Environment","text":"<p>These steps are essential to run and test your code!</p>"},{"location":"INSTALL/#1-setup-osm-oauth-20","title":"1. Setup OSM OAUTH 2.0","text":"<p>The FMTM uses OAUTH2 with OSM to authenticate users. To properly configure your FMTM project, you will need to create keys for OSM.</p> <ol> <li> <p>Login to OSM (If you do not have an account yet, click the signup button at the top navigation bar to create one). Click the drop down arrow on the extreme right of the navigation bar and select My Settings.</p> </li> <li> <p>Register your FMTM instance to OAuth 2 applications. Put your login redirect url as <code>http://127.0.0.1:8080/osmauth/</code>, For Production replace the URL as production API Url</p> </li> </ol> <p>Note: <code>127.0.0.1</code> is required instead of <code>localhost</code> due to OSM restrictions.</p> <p></p> <ol> <li> <p>Right now read user preferences permission is enough later on fmtm may need permission to modify the map option which should be updated on OSM_SCOPE variable on .env , Keep read_prefs for now.</p> </li> <li> <p>Now Copy your Client ID and Client Secret. Put them in the <code>OSM_CLIENT_ID</code> and <code>OSM_CLIENT_SECRET</code> of your <code>.env</code> file</p> </li> </ol>"},{"location":"INSTALL/#2-create-an-env-file","title":"2. Create an <code>.env</code> File","text":"<p>Environmental variables are used throughout this project. To get started, create <code>.env</code> file in the top level dir, a sample is located at <code>.env.example</code></p> <pre><code>cp .env.example .env\n</code></pre> <p>Your env should look like this:</p> <pre><code>### ODK Central ###\nODK_CENTRAL_URL=https://central-proxy\nODK_CENTRAL_USER=`&lt;any_valid_email_address&gt;`\nODK_CENTRAL_PASSWD=`&lt;password_of_central_user&gt;`\n\n### FMTM ###\n# DEBUG=True\n# LOG_LEVEL=DEBUG\nURL_SCHEME=http\nAPI_URL=127.0.0.1:8000\nFRONTEND_MAIN_URL=localhost:8080\nFRONTEND_MAP_URL=localhost:8081\n# API_PREFIX=/api\n\n### OSM ###\nOSM_CLIENT_ID=`&lt;OSM_CLIENT_ID_FROM_ABOVE&gt;`\nOSM_CLIENT_SECRET=`&lt;OSM_CLIENT_SECRET_FROM_ABOVE&gt;`\nOSM_URL=https://www.openstreetmap.org\nOSM_SCOPE=read_prefs\nOSM_LOGIN_REDIRECT_URI=http://127.0.0.1:8080/osmauth/\nOSM_SECRET_KEY=&lt;random_key_for_development&gt;\n\n### Database (optional) ###\nCENTRAL_DB_HOST=central-db\nCENTRAL_DB_USER=odk\nCENTRAL_DB_PASSWORD=odk\nCENTRAL_DB_NAME=odk\n\nFMTM_DB_HOST=fmtm-db\nFMTM_DB_USER=fmtm\nFMTM_DB_PASSWORD=fmtm\nFMTM_DB_NAME=fmtm\n</code></pre>"},{"location":"INSTALL/#start-the-api-with-docker","title":"Start the API with Docker","text":"<p>The easiest way to get up and running is by using the FMTM Docker deployment. Docker creates a virtual environment, isolated from your computer's environment, installs all necessary dependencies, and creates a container for the database, the api, and the frontend. These containers talk to each other via the URLs defined in the docker-compose file and your env file.</p>"},{"location":"INSTALL/#starting-the-containers","title":"Starting the Containers","text":"<ol> <li>You will need to Install Docker and ensure that it is running on your local machine.</li> <li>From the command line, navigate to the top level directory of the FMTM project.</li> <li>From the command line run: <code>docker compose pull</code>.    This will pull the latest container builds from main branch.</li> <li>Once everything is pulled, from the command line run: <code>docker compose up -d api</code></li> <li>If everything goes well you should now be able to navigate to the project in your browser: <code>http://127.0.0.1:8000/docs</code></li> </ol> <p>Note: If those link doesn't work, check the logs with <code>docker logs fmtm_api</code>.</p>"},{"location":"INSTALL/#setup-odk-central-user","title":"Setup ODK Central User","text":"<p>The FMTM uses ODK Central to store ODK data.</p> <ul> <li>By default, the docker setup includes a Central server.</li> <li>The credentials should have been provided in your <code>.env</code> file to automatically create a user.</li> <li>To create a user manually:</li> </ul> <pre><code>docker compose exec central odk-cmd --email YOUREMAIL@ADDRESSHERE.com user-create\ndocker-compose exec central odk-cmd --email YOUREMAIL@ADDRESSHERE.com user-promote\n</code></pre> <p>Note: Alternatively, you may use an external Central server and user.</p>"},{"location":"INSTALL/#import-test-data","title":"Import Test Data","text":"<p>Some test data is available to get started quickly.</p> <ul> <li>Navigate to the <code>import-test-data</code> endpoint in the API docs page:   http://127.0.0.1:8000/docs#/debug/import_test_data_debug_import_test_data_get</li> <li>Click <code>Try it out</code>, then <code>execute</code>.</li> </ul>"},{"location":"INSTALL/#check-authentication","title":"Check Authentication","text":"<p>Once you have deployed, you will need to check that you can properly authenticate.</p> <ol> <li> <p>Navigate to <code>{URL_SCHEME}://{API_URL}/docs</code></p> <p>Three endpoints are responsible for oauth </p> </li> <li> <p>Hit <code>/auth/osm_login/</code> : This will give you the Login URL where you can supply your osm username/password</p> <p>Response should be like this :</p> <pre><code>{\"login_url\": \"https://www.openstreetmap.org/oauth2/authorize/?response_type=code&amp;client_id=xxxx\"}\n</code></pre> <p>Now Copy your login_url and hit it in new tab, and you will be redirected to OSM for your LOGIN. Give FMTM the necessary permission</p> <p>After successful login, you will get your <code>access_token</code> for FMTM Copy it and now you can use it for rest of the endpoints that need authorizations</p> </li> <li> <p>Check your access token: Hit <code>/auth/me/</code> and pass your <code>access_token</code> You should get your osm id, username and profile picture id</p> </li> </ol> <p>That's it, you have successfully set up the backend!!</p>"},{"location":"INSTALL/#3-setting-up-the-frontend","title":"3. Setting up the Frontend","text":""},{"location":"INSTALL/#fork-and-clone-the-fmtm-repository_1","title":"Fork and Clone the FMTM repository","text":""},{"location":"INSTALL/#1-fork-the-repository_1","title":"1. Fork the repository","text":"<p>Forking creates a copy of the repository in your own GitHub account. Go to the Field Mapping Tasking Manager repository and click the \"Fork\" button in the top right corner of the page.</p>"},{"location":"INSTALL/#2-clone-the-forked-repository_1","title":"2. Clone the forked repository","text":"<p>Clone the forked repository to your local machine using the following command:</p> <p><code>git clone https://github.com/&lt;your-username&gt;/fmtm.git</code></p> <p>Make sure to replace <code>&lt;your-username&gt;</code> with your GitHub username.</p>"},{"location":"INSTALL/#the-microfrontend-configuration","title":"The Microfrontend configuration","text":"<p>The FMTM frontend is built using a microfrontend architecture, divided into modules that can be developed, tested, and deployed independently.</p> <p>Webpack remote modules are used to achieve this, dynamically loading code from other microfrontend applications.</p> <p>In theory, this should improve the performance and scalability of the application. However, great care should be taken with watching dependency versions across modules, to prevent loading more js content than is required.</p> <p>List of current microfrontend modules:</p> <ul> <li>main:</li> <li>Description: The main frontend, displays projects and tasks.</li> <li>Location: src/frontend/main</li> <li>Port: 8080.</li> <li>fmtm_openlayers_map:</li> <li>Description: The map component, displays tasks on a map.</li> <li>Location: src/frontend/fmtm_openlayers_map</li> <li>Port: 8081.</li> </ul>"},{"location":"INSTALL/#start-the-frontends-with-docker","title":"Start the Frontends with Docker","text":"<p>This is the easiest way to manage multiple frontends at once.</p>"},{"location":"INSTALL/#starting-the-frontend-containers","title":"Starting the Frontend Containers","text":"<ol> <li>You will need to Install Docker and ensure that it is running on your local machine.</li> <li>From the command line: navigate to the top level directory of the FMTM project.</li> <li>From the command line run: <code>docker compose build ui-main ui-map</code>    This is essential, as the development containers for the frontend are different to production.</li> <li> <p>Once everything is built, from the command line run: <code>docker compose up -d ui-main ui-map</code></p> </li> <li> <p>If everything goes well you should now be able to navigate to the project in your browser:</p> </li> <li>Main: http://127.0.0.1:8080</li> <li>Map: http://127.0.0.1:8081</li> </ol> <p>That's it, you have successfully set up the frontend!!</p> <p>NOTE: For a detailed guide, installation tips and other installation methods, check out the docs folder</p>"},{"location":"User-Manual-For-Project-Managers/","title":"User Manual for FMTM","text":"<p> This manual is a step by step guide for the project managers on how to get started with the Field Mapping Tasking Manager.</p> <ul> <li>Introduction</li> <li>An Overview Of FMTM In Relations With HOT, OSM and ODK.</li> <li>Prerequisites</li> <li>Video Tutorial</li> <li>Steps to create a project in FMTM</li> <li>Steps to start access your project and Start mapping</li> <li>Help and Support</li> <li>Thank you note </li> </ul>"},{"location":"User-Manual-For-Project-Managers/#introduction","title":"Introduction","text":"<p>A Mapping Campaign refers to an organized effort of collecting data from a particular geographic area/feature and creating maps. This may involve using various mapping technologies such as; GPS, satellite imagery, or crowdsourced data. These technologies are used to gather information about the area of interest.</p> <p>Mapping campaigns can be carried out for lots of different purposes, some examples are:</p> <ul> <li>Disaster Response and Recovery</li> <li>Environmental Conservation</li> <li>Urban planning or;</li> <li>Social and Political Activism.</li> </ul> <p>They often involve collaboration between organizations like; Government Agencies, Non-profit Groups and volunteers.</p> <p>Once the data is collected, it is analyzed and processed to create detailed maps that can have a variety of use cases. These could be:</p> <ul> <li>Identifying areas of need.</li> <li>Planning infrastructure and development projects.</li> <li>Understanding the impact of environmental changes on the landscape,   etc.</li> </ul>"},{"location":"User-Manual-For-Project-Managers/#an-overview-of-fmtm-in-relations-with-hot-osm-and-odk","title":"An Overview Of FMTM In Relations With HOT, OSM and ODK","text":"<p>The Humanitarian OpenStreetMap Team (HOT) is a non-profit organization that uses open mapping data to support humanitarian and disaster response efforts around the world. The Field Mapping Task Manager (FMTM) is one of the tools that HOT used to coordinate and manage mapping projects.</p> <p>FMTM is a software tool that helps project managers to organize and manage mapping tasks. It assigns those tasks to volunteers and tracks their progress. The tool includes features for collaborative editing, data validation, and error detection. This ensures that the data collected by volunteers is accurate and reliable.</p> <p>FMTM is designed to be used in conjunction with Open Data Kit (ODK). ODK is a free and open-source set of tools that allows users to create, collect, and manage data with mobile devices. The ODK provides a set of open-source tools that allow users to build forms, collect data in the field, and aggregate data on a central server. It is commonly used for data collection in research, monitoring and evaluation, and other development projects.</p> <p>Project managers use FMTM to manage tasks and assign them to volunteers. The data collected by the volunteer via ODK is typically uploaded to OpenStreetMap (OSM) where it is used to create more detailed and accurate maps of the affected area. OSM is a free and open-source map of the world that is created and maintained by volunteers.</p> <p>Overall, the FMTM tool is an important component of HOT's efforts to support disaster response and humanitarian efforts around the world. By coordinating mapping activities and ensuring the accuracy and reliability of the data collected by volunteers, FMTM helps to provide critical information that can be used to support decision-making and improve the effectiveness of humanitarian efforts.</p>"},{"location":"User-Manual-For-Project-Managers/#prerequisites","title":"Prerequisites","text":"<ul> <li>Stable Internet connection</li> <li>Knowledge on field mapping . If you are new to mapping we suggest you to read this .</li> <li>Account on ODK Central Server. Here are the instructions for setting up an ODK Central server on Digital Ocean (it's very similar on AWS or whatever)</li> </ul>"},{"location":"User-Manual-For-Project-Managers/#video-tutorial","title":"Video Tutorial","text":"<p>https://github.com/hotosm/fmtm/assets/97789856/6ad200e7-3af9-418b-bb6e-6666bbab9a15</p> <p>https://github.com/hotosm/fmtm/assets/97789856/62646dd8-6130-4612-99fe-4df29ae432d9</p> <p>https://github.com/hotosm/fmtm/assets/97789856/8677062c-981c-4ea3-964f-3348c4953f82</p> <p>https://github.com/hotosm/fmtm/assets/97789856/02355809-2f40-470c-856f-afe56250883f</p> <p>https://github.com/hotosm/fmtm/assets/97789856/084ce707-95ba-4d51-a650-132be84fbe68</p> <p>https://github.com/hotosm/fmtm/assets/97789856/6711badb-c93e-4109-9090-0ad1f1554699</p> <p>https://github.com/hotosm/fmtm/assets/97789856/b2af3c7d-5392-4e10-bf83-853b2f517c9a</p> <p>https://github.com/hotosm/fmtm/assets/97789856/d8b2bf72-e8e0-41bc-a568-77854f45efa6</p>"},{"location":"User-Manual-For-Project-Managers/#steps-to-create-a-project-in-fmtm","title":"Steps to create a project in FMTM","text":"<ol> <li>Go to fmtm .</li> <li>In the header, you'll find three tabs: Explore Projects, Manage Organization, and Manage Categories.</li> </ol> <ol> <li>Start by exploring the projects listed by different nations and world communities for field mapping exercises.</li> <li>Use the filters or search option to narrow down the project cards based on your preferences.    </li> <li>If you are not logged into the system, the \"Create new project\" button will be disabled.</li> <li>If you are new then on the top right cornor click on Sign up and create an account . Else , Sign in to your existing account .</li> <li>Once signed in, the \"Create new project\" button will be enabled. Click on it.</li> <li>The process of creating a new project involves four steps: Project Details, Uploading the Area, Defining the Task, and Selecting the Form.</li> <li>Start by filling in the project details, including the organization name, project name, description, and other relevant information.</li> </ol> <ol> <li>If your organization's name is not listed, you can add it through the \"Manage Organization\" tab.</li> <li>Provide the necessary credentials for the ODK (Open Data Kit) central setup, including URL, username, and password.</li> <li>Proceed to the next step, which is uploading the area for field mapping. Choose the file option and select the AOI (Area of Interest) file in GEOJSON file format. Review the displayed map that corresponds to your selected area and click on \"Next\".</li> </ol> <ol> <li>Define the tasks of the project. </li> </ol> <p>If you choose \"Divide on Square,\" specify the dimensions of the square tasks. Click on \"Next\" to proceed.</p> <p></p> <ol> <li>Select Form . Select the form category you want to use for the field mapping, such as \"Data Extract\" or any other relevant category. Choose a specific form from the existing forms or upload a custom form if needed. Click on \"Submit\" to proceed.</li> </ol> <p></p> <ol> <li>Wait for the system to generate QR codes for each task, which will be used later in the field mapping process.</li> <li>After the QR codes are generated, you can find your project in the project dashboard.</li> </ol> <p></p>"},{"location":"User-Manual-For-Project-Managers/#steps-to-start-access-your-project-and-start-mapping-or-a-mapping-campaign","title":"Steps to start access your project and Start mapping or a mapping campaign","text":"<ol> <li>Go to the Explore projects tab . Click on the project card and proceed to the next step.</li> <li> <p>Select one of the available tasks and start the field mapping exercise.    </p> </li> <li> <p>If a task is already locked by another user, choose a different task that is available for mapping.If a task is already locked by another user, choose a different task that is available for mapping.</p> </li> <li> <p>The drop down icon beside LEGEND displays a color code. This    color code lets you know the status of each task on the map.</p> <ul> <li>READY means that task is available to be mapped</li> <li>LOCKED FOR MAPPING means that task is already being mapped by another volunteer and therefore unavailable for mapping</li> <li>MAPPED or READY FOR VALIDATION means that task has been completely mapped and ready to be validated.</li> <li>LOCKED FOR VALIDATION means that task has been mapped and being validated.</li> <li>VALIDATED means that task has successfully been validated and completely mapped with no errors</li> <li>INVALIDATED or MORE MAPPING NEEDED means that task did not pass the validation process and needs more mapping</li> <li>BAD means that task is not clear and cannot be mapped</li> </ul> </li> </ol> <p>Note: 'task' refers to each section of the map enclosed in the dotted lines and each task has a corresponding number tag.</p> <p>   - To begin mapping, click on a task closest to you that has the color    code associated with READY and change it's status from READY    to LOCKED FOR MAPPING. Remember to take note of the number tag.   - Scroll to the bottom of the page. The ACTIVITIES tab shows the    tasks either LOCKED FOR MAPPING, BAD or LOCKED FOR    VALIDATION. You can search for tasks with the status mentioned    using the number tag associated with each task.</p> <ol> <li>Use the QR code to start mapping the selected task using the ODK Collect app on your mobile phone.</li> <li>Install and open the ODK Collect app on your phone.</li> <li>Set up the project details by scanning the QR code provided.</li> <li>Once the project is set up in the app, start a new form based on the selected form from the project setup.</li> <li>Fill in the questionnaires and collect data for the field mapping exercise.</li> <li>Save and send the completed form to the server.</li> <li>After completing the assigned task, go back to the project platform on FMTM and mark it as fully mapped.</li> </ol>"},{"location":"User-Manual-For-Project-Managers/#help-and-support","title":"Help and Support","text":"<p>If you encounter any issues or need assistance while using FMTM, you can access the following resources: - Check the FAQs . - Ask your doubts in the Slack channel: #fmtm-field-pilots</p>"},{"location":"User-Manual-For-Project-Managers/#thank-you","title":"Thank you","text":"<p>We are excited to have you join our community of passionate mappers and volunteers. FMTM is a powerful platform developed by the Humanitarian OpenStreetMap Team (HOT) to facilitate mapping projects for disaster response, humanitarian efforts, and community development.</p> <p>With FMTM, you have the opportunity to make a real impact by mapping areas that are in need of support. Your contributions help create detailed and up-to-date maps that aid organizations and communities in their efforts to respond to crises, plan infrastructure, and improve the lives of people around the world.</p> <p>Whether you are a seasoned mapper or new to the world of mapping, FMTM provides a user-friendly interface and a range of tools to make your mapping experience smooth and rewarding. You can create tasks, collaborate with other volunteers, and contribute to ongoing projects that align with your interests and expertise.</p> <p>By mapping with FMTM, you are joining a global community of dedicated individuals who share a common goal of using open data to make a positive difference. Together, we can create a more resilient and inclusive world.</p> <p>Explore the projects, join tasks, and contribute your skills to help us build accurate and comprehensive maps. Don't hesitate to ask questions, seek guidance, and engage with fellow mappers through our forums and communication channels.</p> <p>Thank you for being part of FMTM. Your mapping efforts are invaluable, and we appreciate your commitment to making a difference.</p> <p>Happy mapping!</p> <p>The FMTM Team</p>"},{"location":"dev/Backend/","title":"Backend Deployment for Development","text":"<p>The recommended way to run FMTM is with Docker. You can also develop on your local machine outside of Docker, see below.</p> <p>NOTE: If you haven't yet downloaded the Repository and setup your environment variables, please check the Getting Started wiki page.</p> <p>Now let's get started </p>"},{"location":"dev/Backend/#1-start-the-api-with-docker","title":"1. Start the API with Docker","text":"<p>The easiest way to get up and running is by using the FMTM Docker deployment. Docker creates a virtual environment, isolated from your computer's environment, installs all necessary dependencies, and creates a container for each the database, the api, and the frontend. These containers talk to each other via the URLs defined in the docker-compose file and your env file.</p>"},{"location":"dev/Backend/#1a-starting-the-containers","title":"1A: Starting the Containers","text":"<ol> <li>You will need to Install Docker and ensure that it is running on your local machine.</li> <li>From the command line: navigate to the top level directory of the FMTM project.</li> <li>From the command line run: <code>docker-compose pull</code>.    This will pull the latest container builds from main branch.</li> <li>Make sure you have a <code>.env</code> file with all required variables, see Getting Started.</li> <li>Once everything is pulled, from the command line run: <code>docker compose up -d api</code></li> <li>If everything goes well you should now be able to navigate to the project in your browser: <code>http://127.0.0.1:8000/docs</code></li> </ol> <p>Note: If that link doesn't work, check the logs with <code>docker log fmtm_api</code>.</p> <p>Note: the database host <code>fmtm-db</code> is automatically resolved by docker compose to the database container IP.</p> <ul> <li>FMTM uses ODK Central to store ODK data.</li> <li>To facilitate faster development, the Docker setup includes a Central server.</li> <li>The credentials are provided via the <code>.env</code> file.</li> </ul> <p>Note: Alternatively, you may use an external Central server and user in the <code>.env</code>.</p>"},{"location":"dev/Backend/#1b-import-test-data","title":"1B: Import Test Data","text":"<p>Some test data is available to get started quickly.</p> <ol> <li>Navigate to the <code>import-test-data</code> endpoint in the API docs page:    http://127.0.0.1:8000/docs#/debug/import_test_data_debug_import_test_data_get</li> <li>Click <code>Try it out</code>, then <code>execute</code>.</li> </ol>"},{"location":"dev/Backend/#2-start-the-api-without-docker","title":"2. Start the API without Docker","text":"<p>To run FMTM without Docker, you will need to start the database, then the API.</p>"},{"location":"dev/Backend/#2a-starting-the-database","title":"2A: Starting the Database","text":""},{"location":"dev/Backend/#option-1-run-the-database-only-in-docker","title":"Option 1: Run the Database (only) in Docker","text":"<p>Running the database in Docker means postgres does not need to be installed on your local machine.</p> <ol> <li>You will need to Install Docker and ensure that it is running on your local machine.</li> <li>Start an instance of Postgres (with Postgis):</li> </ol> <pre><code>docker run -d --name fmtm_db -e POSTGRES_PASSWORD=xxxx -p 5432:5432 postgis/postgis:15-3.3\n</code></pre> <p>The database should be accessible at localhost:5432.</p> <p>Note: if port 5432 is already taken, then change the <code>-p ANY_PORT:5432</code> declaration.</p>"},{"location":"dev/Backend/#option-2-run-the-database-locally","title":"Option 2: Run the database locally","text":"<p>For advanced users, it is also possible to run a postgresql/postgis database locally, however you will need to set it up yourself and make it accessible on a port.</p>"},{"location":"dev/Backend/#2b-starting-the-api","title":"2B. Starting the API","text":"<p>After starting the database, from the command line:</p> <ol> <li>Navigate to the top level directory of the FMTM project.</li> <li>Install PDM with: <code>pip install pdm</code></li> <li>Install backend dependencies with PDM: <code>pdm install</code></li> <li>Run the Fast API backend with: <code>pdm run uvicorn app.main:api --host 0.0.0.0 --port 8000</code></li> </ol> <p>The API should now be accessible at: http://127.0.0.1:8000/docs</p>"},{"location":"dev/Backend/#3-hybrid-dockerlocal","title":"3. Hybrid Docker/Local","text":"<ul> <li>It is not recommended to run FMTM in a container while using a local database on your machine.</li> <li>It is possible, but complicates the docker networking slightly.</li> <li>The FMTM container cannot see the local machine's <code>localhost</code>, so we need a workaround.</li> <li>Option 1: add <code>network_mode: \"host\"</code> under the <code>api:</code> service in the docker-compose.yml file.</li> <li>Option 2: use the direct container IP address for the database for FMTM_DB_HOST, found via <code>docker inspect fmtm_db</code>.</li> </ul>"},{"location":"dev/Backend/#backend-tips","title":"Backend Tips","text":""},{"location":"dev/Backend/#implement-authorization-on-an-endpoints","title":"Implement authorization on an endpoints","text":"<p>To add authentication to an endpoint, import <code>login_required</code> from <code>auth</code> module, you can use it as a decorator or use fastapi <code>Depends(login_required)</code> on endpoints.</p>"},{"location":"dev/Backend/#backend-debugging","title":"Backend Debugging","text":"<ul> <li>The <code>docker-compose.yml</code> builds FMTM using the <code>debug-with-odk</code> target in the Dockerfile.</li> <li>The debug image contains <code>debugpy</code> to assist debugging in the container.</li> </ul> <p>To use it:</p> <ol> <li>Re-build the docker image <code>docker compose build api</code></li> <li>Start the docker container <code>docker compose up -d api</code></li> <li>Connect to the debugger on port 5678.</li> </ol> <p>You can configure your IDE to do this with the build in debugger.</p> <p>Example launch.json config for vscode:</p> <pre><code>{\n  \"configurations\": [\n    {\n      \"name\": \"Remote - Server Debug\",\n      \"type\": \"python\",\n      \"request\": \"attach\",\n      \"host\": \"localhost\",\n      \"port\": 5678,\n      \"pathMappings\": [\n        {\n          \"localRoot\": \"${workspaceFolder}/src/backend/app\",\n          \"remoteRoot\": \"/opt/app\"\n        }\n      ],\n      \"justMyCode\": false\n    }\n  ]\n}\n</code></pre> <p>Note: either port 5678 needs to be bound to your localhost (default), or the <code>host</code> parameter can be set to the container IP address.</p>"},{"location":"dev/Backend/#using-the-local-version-of-odk-central","title":"Using the local version of ODK Central","text":"<ul> <li>During project creation a Central ODK URL must be provided.</li> <li>If you set up FMTM with docker and have ODK Central running in a container, you can use the URL:   <code>https://central-proxy</code></li> <li>The credentials should be present in your <code>.env</code> file.</li> </ul>"},{"location":"dev/Backend/#debugging-osm-fieldwork","title":"Debugging osm-fieldwork","text":"<p><code>osm-fieldwork</code> is an integral package for much of the functionality in FMTM.</p> <p>Creating a new release during development may not always be feasible.</p> <ul> <li>A development version of osm-fieldwork can be mounted into the FMTM container via bind mount.</li> <li>Clone the osm-fieldwork repo to the same root directory as FMTM.</li> <li>Uncomment the line in docker-compose.yml</li> </ul> <pre><code>- ../osm-fieldwork/osm_fieldwork:/home/appuser/.local/lib/python3.10/site-packages/osm_fieldwork\n</code></pre> <ul> <li>Run the docker container with your local version of osm-fieldwork.</li> <li>Code changes to osm-fieldwork should be reflected immediately. If they are not, run:   <code>docker compose restart api</code>.</li> </ul> <p>Note: this is useful for debugging features during active development.</p>"},{"location":"dev/Backend/#running-josm-in-the-dev-stack","title":"Running JOSM in the dev stack","text":"<ul> <li>Run JOSM with FMTM:</li> </ul> <pre><code>docker compose \\\n-f docker-compose.yml \\\n-f docker-compose.josm.yml \\\nup -d\n</code></pre> <p>This adds JOSM to the docker compose stack for local development. Access the JOSM Remote API: http://localhost:8111 Access the JOSM GUI in browser: http://localhost:8112</p> <p>You can now call the JOSM API from FMTM and changes will be reflected in the GUI.</p>"},{"location":"dev/Backend/#conclusion","title":"Conclusion","text":"<p>Running the FMTM project is easy with Docker. You can also run the project locally outside of Docker, but it requires more setup. The frontend is built with React and Typescript, and the backend is built with FastAPI. Use the tips provided to customize and extend the functionality of the project.</p>"},{"location":"dev/Database-Tips/","title":"Access the database (psql)","text":"<p>Option 1 (when the docker container is running) use this command to access it through the local psql using the below command:</p> <pre><code>`psql -d fmtm -U fmtm -h localhost`\n</code></pre> <p>Option 2 (when running the database in Docker) use this command to access the PostgreSQL shell inside the fmtm-db-1 container and interact with the fmtm database using the psql command-line interface:</p> <pre><code>`docker exec -it fmtm-db-1 psql -U fmtm fmtm`\n</code></pre> <p>And then connect to the database using this command :</p> <pre><code>`\\c fmtm`\n</code></pre>"},{"location":"dev/Database-Tips/#to-access-the-fmtm-database-using-psql-follow-the-instructions-below","title":"To access the fmtm database using psql, follow the instructions below","text":""},{"location":"dev/Database-Tips/#a-few-helpful-psql-commands","title":"A few helpful psql commands","text":"<ul> <li>Open a terminal window and run the following command:<pre><code>docker exec -it fmtm-db-1 psql -U fmtm fmtm\n</code></pre> </li> </ul> <p>This will open the psql command-line interface and connect you to the fmtm database.</p> <ul> <li>Once connected to the fmtm database, you can switch to a different database using the command:<pre><code>\\c dbname\n</code></pre> </li> </ul> <p>Replace \"dbname\" with the name of the database you want to switch to. forexample <code>\\c fmtm</code></p> <ul> <li> <p>You can list all the databases using the command:</p> <pre><code>\\l\n</code></pre> </li> <li> <p>To list all the schemas of the currently connected database, use the command:</p> <pre><code>\\dn\n</code></pre> </li> <li> <p>To list all the functions in the current database, use the command:</p> <pre><code>\\df\n</code></pre> </li> <li> <p>To list all the views in the current database, use the command:</p> <pre><code>\\dv\n</code></pre> </li> <li> <p>To list all the users and roles, use the command:</p> <pre><code>\\du\n</code></pre> </li> <li> <p>To list all the tables in the current database, use the command:</p> <pre><code>\\dt\n</code></pre> </li> <li> <p>To describe a table, use the command:</p> <pre><code>\\d table_name\n</code></pre> </li> </ul> <p>Replace \"table_name\" with the name of the table you want to describe.</p> <ul> <li> <p>To execute the last command again, use the command:</p> <pre><code>\\g\n</code></pre> </li> <li> <p>To view your command history, use the command:</p> <pre><code>\\s\n</code></pre> </li> <li> <p>To save your command history to a file, use the command:</p> <pre><code>\\s filename\n</code></pre> </li> </ul> <p>Replace \"filename\" with the name of the file you want to save the command history to.</p> <ul> <li>To execute commands from a file, use the command:<pre><code>\\i filename\n</code></pre> </li> </ul> <p>Replace \"filename\" with the name of the file containing the commands you want to execute.</p> <ul> <li> <p>To view a list of all psql commands, use the command:</p> <pre><code>\\?\n</code></pre> </li> <li> <p>To view help for a specific command, use the command:</p> <pre><code>\\h command_name\n</code></pre> </li> </ul> <p>Replace \"command_name\" with the name of the command you want help with.</p> <ul> <li>To exit psql, use the command:<pre><code>\\q\n</code></pre> </li> </ul> <p>Note: If you make a change, don't forget to commit the change!</p>"},{"location":"dev/Database-Tips/#migrations","title":"Migrations","text":"<p>Migrations are a way to manage changes to the database schema over time. We haven't yet implemented migrations in fmtm, but if you need to drop all tables, you can use the following commands while connected to the fmtm database:</p> <p>If you need to drop all tables, connect to fmtm and...</p> <pre><code>drop table mapping_issue_categories cascade;\ndrop table organisation_managers cascade;\ndrop table organisations  cascade;\ndrop table project_allowed_users cascade;\ndrop table project_chat cascade;\ndrop table project_info cascade;\ndrop table project_teams cascade;\ndrop table projects cascade;\ndrop table task_history cascade;\ndrop table task_invalidation_history cascade;\ndrop table task_mapping_issues cascade;\ndrop table tasks cascade;\ndrop table teams cascade;\ndrop table user_licenses cascade;\ndrop table users cascade;\ndrop table x_form cascade;\n</code></pre> <p>Note: Remember to use caution when dropping tables, as this will permanently delete all data in those tables. If you make any changes to the database, be sure to commit them to ensure that they are saved.</p>"},{"location":"dev/Docker-Tips/","title":"Docker organization","text":"<p>This section explains how the Docker deployment works when running <code>docker-compose</code>. It gives an overview of what happens when the scripts in <code>Dockerfile</code> are run and what happens for each container.</p> <p>When running <code>docker-compose</code>, it sets up the environment for the project and deploys the containers specified in the <code>docker-compose.yml</code> file. The scripts in the <code>Dockerfile</code> are used to set up the environment and dependencies for each container.</p>"},{"location":"dev/Docker-Tips/#for-example-lets-say-that-we-have-the-following-docker-composeyml-file","title":"For example, let's say that we have the following <code>docker-compose.yml</code> file","text":"<pre><code>version: \"3\"\nservices:\ndb:\n    image: postgres:latest\n    environment:\n    POSTGRES_USER: user\n    POSTGRES_PASSWORD: password\napi:\n    build:\n    context: .\n    dockerfile: Dockerfile\n    environment:\n    DATABASE_URL: postgresql://user:password@db:5432/mydb\n    ports:\n    - \"8000:8000\"\nweb:\n    build:\n    context: .\n    dockerfile: Dockerfile\n    environment:\n    API_URL: http://api:8000\n    ports:\n    - \"3000:3000\"\n</code></pre> <p>In this file, we have three containers: <code>db</code>, <code>api</code>, and <code>web</code>. For each container, we specify the <code>image</code> or <code>build</code> to use, any environment variables to set, and any ports to expose.</p> <p>When we run <code>docker-compose up</code>, the scripts in the <code>Dockerfile</code> will be run for each container, setting up the environment and dependencies needed for the container to run. Then, for each container, the environment variables will be set, the execute command will be run, and the container will be deployed at the given port.</p> <p>Note: this Docker deployment automatically sets up a traefik server with ssh.</p>"},{"location":"dev/Docker-Tips/#when-updating-docker","title":"When updating docker","text":"<p>This section explains what to do when updating Docker. It's important to make sure that all the necessary files are updated, including <code>.prod</code> and <code>.local</code> <code>docker-compose</code> or <code>Dockerfiles</code>.</p> <p>For example, if we update the <code>Dockerfile</code> to include a new package that our application needs, we need to make sure that we also update the <code>.prod</code> and <code>.local</code> files as needed. Otherwise, our production deployment may be missing the necessary dependencies, causing our application to fail.</p>"},{"location":"dev/Docker-Tips/#debugging-when-using-docker","title":"Debugging when using docker","text":"<p>This section explains how to debug an application when using Docker. It gives an example of how to open a TTY to a container and add a debug line in code using IPython debugger (ipdb).</p> <p>When we are developing an application, we may encounter bugs that we need to debug. Docker can make this process a bit more complicated, as we need to access the running container to debug our code.</p> <p>To open a TTY to a container, we can use the following command:</p> <pre><code>docker attach &lt;container_name&gt;\n</code></pre> <p>For example, if we want to open a TTY to the <code>fmtm-web-1</code> container, we would run:</p> <pre><code>docker attach fmtm-web-1\n</code></pre> <p>Once we have a TTY open, we can add a debug line in our code using IPython debugger (ipdb). This allows us to pause our code at a specific point and interactively debug it using IPython commands.</p> <p>For example, let's say that we have the following Python code:</p> <pre><code>def add_numbers(a, b):\n    import ipdb; ipdb.set_trace()\n    return a + b\n</code></pre> <p>When we call the add_numbers function, our code will pause at the import ipdb; ipdb.set_trace() line, and we can use IPython commands to inspect variables</p> <p>When this line is reached in the code then the attached tty window will become interactive with ipdb.</p> <p>A few of those commands: Command CheatSheet</p> <ul> <li><code>help</code>: displays the list of available IPython commands</li> <li><code>h(elp) &lt;command&gt;</code>: displays help for the specified command</li> <li><code>w(here)</code>: shows the current position in the code</li> <li><code>d(own)</code>: moves down one level in the call stack</li> <li><code>u(p)</code>: moves up one level in the call stack</li> <li><code>b(reak) &lt;location&gt; [condition]</code>: sets a breakpoint at the   specified - location, with an optional condition</li> <li><code>tbreak &lt;location&gt; [condition]</code>: sets a temporary breakpoint at   the - specified location, with an optional condition</li> <li><code>cl(ear) [bpnumber]</code>: clears the specified breakpoint, or all   breakpoints if no number is given</li> <li><code>disable &lt;bpnumber&gt; [&lt;bpnumber&gt; ...]</code>: disables the specified breakpoint(s)</li> <li><code>enable &lt;bpnumber&gt; [&lt;bpnumber&gt; ...]</code>: enables the specified breakpoint(s)</li> <li><code>ignore &lt;bpnumber&gt; &lt;count&gt;</code>: sets the number of times to ignore the   specified breakpoint</li> <li><code>condition &lt;bpnumber&gt; &lt;condition&gt;</code>: sets a new condition for the   specified breakpoint</li> <li><code>s(tep)</code>: steps to the next line of code</li> <li><code>n(ext)</code>: executes the next line of code, without stepping into functions</li> <li><code>unt(il)</code>: runs the code until it reaches a line with a greater   number than the current line</li> <li><code>r(eturn)</code>: runs the code until it returns from the current function</li> <li><code>run [args ...]</code>: starts the program with the specified arguments</li> <li><code>c(ont(inue))</code>: continues running the program until the next   breakpoint or until it finishes</li> <li><code>l(ist) [&lt;first&gt; [&lt;last&gt;]]</code>: displays the source code around the   current position, with an optional range of lines to show</li> <li><code>a(rgs)</code>: shows the arguments of the current function</li> <li><code>p &lt;expression&gt;</code>: evaluates the expression and prints its value</li> </ul> <p>To exit IPython debugging mode, we can press CTRL + D.</p>"},{"location":"dev/Docker-Tips/#conclusion","title":"Conclusion","text":"<p>Overall, the documentation provides a clear overview of how the Docker deployment works when running <code>docker-compose</code>, what to do when updating Docker, and how to debug an application when using Docker using IPython debugger (ipdb). The provided examples make it easier to understand how to implement these concepts in practice.</p>"},{"location":"dev/Frontend/","title":"Frontend Deployment for Development","text":""},{"location":"dev/Frontend/#the-microfrontend-configuration","title":"The Microfrontend configuration","text":"<p>The FMTM frontend is built using a microfrontend architecture, divided into modules that can be developed, tested, and deployed independently.</p> <p>Webpack remote modules are used to achieve this, dynamically loading code from other microfrontend applications.</p> <p>In theory, this should improve the performance and scalability of the application. However, great care should be taken with watching dependency versions across modules, to prevent loading more js content than is required.</p> <p>List of current microfrontend modules:</p> <ul> <li>main:</li> <li>Description: The main frontend, displays projects and tasks.</li> <li>Location: src/frontend/main</li> <li>Port: 8080.</li> <li>fmtm_openlayers_map:</li> <li>Description: The map component, displays tasks on a map.</li> <li>Location: src/frontend/fmtm_openlayers_map</li> <li>Port: 8081.</li> </ul>"},{"location":"dev/Frontend/#1-start-the-frontends-with-docker","title":"1. Start the Frontends with Docker","text":"<p>This is the easiest way to manage multiple frontends at once.</p>"},{"location":"dev/Frontend/#1a-starting-the-api-containers","title":"1A: Starting the API Containers","text":"<p>For details on how to run the API first, please see: DEV 2. Backend</p>"},{"location":"dev/Frontend/#1b-starting-the-frontend-containers","title":"1B: Starting the Frontend Containers","text":"<ol> <li>You will need to Install Docker and ensure that it is running on your local machine.</li> <li>From the command line: navigate to the top level directory of the FMTM project.</li> <li>From the command line run: <code>docker compose build ui-main ui-map</code>    This is essential, as the development containers for the frontend are different to production.</li> <li> <p>Once everything is built, from the command line run: <code>docker compose up -d ui-main ui-map</code></p> </li> <li> <p>If everything goes well you should now be able to navigate to the project in your browser:</p> </li> <li>Main: http://127.0.0.1:8080</li> <li>Map: http://127.0.0.1:8081</li> </ol>"},{"location":"dev/Frontend/#2-start-the-frontends-locally","title":"2. Start the Frontends locally","text":""},{"location":"dev/Frontend/#2a-navigate-to-the-module-subdirectory","title":"2A: Navigate to the module subdirectory","text":"<p>See here for the module location.</p>"},{"location":"dev/Frontend/#2b-install-dependencies","title":"2B: Install dependencies","text":"<p>Install the dependencies by running the following command: <code>npm install</code></p>"},{"location":"dev/Frontend/#2c-run-the-project","title":"2C. Run the project","text":"<p>Run the microfrontend with hot-reloading: <code>npm run start:live</code></p> <p>The frontend should now be accessible at: &lt;&lt;&lt;&lt;&lt;&lt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;."},{"location":"dev/Frontend/#2d-repeat-for-each-module","title":"2D. Repeat for each module","text":"<p>Each module in the microfrontend must be running for it to operate as a whole.</p>"},{"location":"dev/Frontend/#frontend-tips","title":"Frontend Tips","text":"<p>The frontend is built with React and Typescript. Here are some tips on how to work with the frontend:</p>"},{"location":"dev/Frontend/#adding-environment-variables","title":"Adding Environment Variables","text":"<p>To add environment variables, create a .env.local file in the <code>src/frontend</code> directory. Any variables defined here will override those in <code>.env</code>.</p>"},{"location":"dev/Frontend/#adding-new-routes","title":"Adding New Routes","text":"<p>To add a new route, create a new page in the src/frontend/pages directory. Then add a new entry to the <code>src/frontend/router.tsx</code> file.</p>"},{"location":"dev/Frontend/#adding-new-components","title":"Adding New Components","text":"<p>To add a new component, create a new .tsx file in the src/frontend/ components directory.</p>"},{"location":"dev/Frontend/#conclusion","title":"Conclusion","text":"<p>Running the FMTM project is easy with Docker. You can also run the project locally outside of Docker, but it requires more setup. The frontend is built with React and Typescript, and the backend is built with FastAPI. Use the tips provided to customize and extend the functionality of the project.</p>"},{"location":"dev/Production/","title":"Deployment for Production","text":"<p>The following instructions are needed to set up FMTM for production on your own cloud server.</p>"},{"location":"dev/Production/#set-up-the-fmtm-on-a-cloud-server","title":"Set up the FMTM on a cloud server","text":""},{"location":"dev/Production/#set-up-a-server-and-domain-name","title":"Set up a server and domain name","text":"<ul> <li>Get a cloud server (tested with Ubuntu 22.04).</li> <li>Set up a domain name, and point the DNS to your cloud server.</li> <li>SSH into your server. Set up a user with sudo called   fmtm. this   is a good guide for basic server setup including creation of a   user.</li> </ul>"},{"location":"dev/Production/#install-some-stuff-itll-need","title":"Install some stuff it'll need","text":""},{"location":"dev/Production/#docker","title":"Docker","text":"<ul> <li> <p>Install   Docker. Here   is a good tutorial for that; do steps 1 and 2. At the time of   writing that consisted of:</p> <p>sudo apt update   sudo apt install apt-transport-https ca-certificates curl software-properties-common   curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg   echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null   sudo apt update   sudo apt install docker-ce   sudo usermod -aG docker ${USER}   su - ${USER}</p> </li> <li> <p>Now install Docker Compose (as per this   tutorial). At   the time of writing (the latest version of Docker Compose may   change, so the version number might be out of date, but the rest   shouldn't change) this consisted of:</p> <p>mkdir -p ~/.docker/cli-plugins/   curl -SL https://github.com/docker/compose/releases/download/v2.12.2/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose   sudo chmod +x ~/.docker/cli-plugins/docker-compose</p> </li> </ul>"},{"location":"dev/Production/#grab-the-fmtm-code","title":"Grab the FMTM code","text":"<p>Clone the Git repo for the fmtm with <code>git clone https://github.com/hotosm/fmtm.git</code>. Step into the resulting directory with <code>cd fmtm</code>.</p>"},{"location":"dev/Production/#set-up-the-environment-and-utilities-to-launch","title":"Set up the environment and utilities to launch","text":"<p>Create the env file from the example with <code>cp .env.example .env</code>. Edit that file to contain the needful (it should look like this):</p> <pre><code># ODK Central\nODK_CENTRAL_URL=https://central-proxy\nODK_CENTRAL_USER=`&lt;CHANGEME&gt;`\nODK_CENTRAL_PASSWD=`&lt;CHANGEME&gt;`\n\n# FMTM\nAPI_URL=https://fmtm-api.hotosm.org\nFRONTEND_MAIN_URL=https://fmtm.hotosm.org\nFRONTEND_MAP_URL=https://map.fmtm.hotosm.org\n# API_PREFIX=/api\n\n# OSM\nOSM_CLIENT_ID=`&lt;CHANGEME&gt;`\nOSM_CLIENT_SECRET=`&lt;CHANGEME&gt;`\nOSM_URL=https://www.openstreetmap.org\nOSM_SCOPE=read_prefs\nOSM_LOGIN_REDIRECT_URI=`&lt;FRONTEND_URL&gt;`/osmauth/\nOSM_SECRET_KEY=`&lt;CHANGEME&gt;`\n\nFMTM_DB_HOST=fmtm-db\nFMTM_DB_USER=fmtm\nFMTM_DB_PASSWORD=`&lt;CHANGEME&gt;`\nFMTM_DB_NAME=fmtm\n</code></pre> <p>Note: It is also possible to use the API_PREFIX variable if the api is served under, e.g. /api on the domain.</p> <p>Note: You must have an existing version of ODKCentral running, to provide the URL and credentials here.</p> <p>Run the production docker-compose config: <code>docker compose -f docker-compose.prod.yml up -d</code></p> <p>Note: The images should be built already on Quay. If they don't exist, use the <code>--build</code> flag during run.</p> <p>With any luck, this will launch the docker container where the project runs, and you can access the working website from the domain name!</p>"},{"location":"dev/Production/#connecting-to-a-remote-database","title":"Connecting to a remote database","text":"<ul> <li>A database may be located on a headless Linux server in the cloud.</li> <li>To access the database via GUI tool such as PGAdmin, it is possible using port tunneling.</li> </ul> <pre><code>ssh username@server.domain -N -f -L 5430:localhost:5432\n</code></pre> <p>This will map port 5432 on the remote machine to port 5430 on your local machine.</p>"},{"location":"dev/Setup/","title":"Getting started with Field Mapping Tasking Manager","text":"<ul> <li>Overview</li> <li>Introduction to Field Mapping Tasking Manager Web App</li> <li>Basic Tools used</li> <li>Guide for Users</li> <li>Prerequisites</li> <li>Steps to create a project in FMTM</li> <li>Work on existing projects</li> <li>Help and Support</li> <li>A Thank you note for the users of FMTM</li> <li>Guide for Developers</li> <li>FMTM frontend</li> <li>FMTM backend</li> <li>Prerequisites for Contribution</li> <li>Development: Setup Your Local Environment</li> <li>Verify Setup</li> <li>Start Developing</li> </ul>"},{"location":"dev/Setup/#overview","title":"Overview","text":""},{"location":"dev/Setup/#introduction-to-field-mapping-tasking-manager-web-app","title":"Introduction to Field Mapping Tasking Manager Web App","text":"<p>The FMTM web app is a Python/Flask/Leaflet app that serves as a frontend for the ODK Central server, using the ODK Central API to allocate specific areas/features to individual mappers, and receive their data submissions.</p> <p></p> <p>The FMTM codebase consists of:</p> <ul> <li>An API backend in FastAPI (code in: <code>src/backend</code>)</li> <li>A frontend website (soon to be a PWA) in react (code in: <code>src/frontend</code>)</li> </ul>"},{"location":"dev/Setup/#manager-web-interface-with-pc-browser-friendlymap-view","title":"Manager Web Interface (with PC browser-friendlymap view)","text":"<p>A computer-screen-optimized web app that allows Campaign Managers to:</p> <ul> <li>Select AOIs</li> <li>Choose task-splitting schemes</li> <li>Provide instructions and guidance specific to the project</li> <li>View areas that are at various stages of completion</li> <li>Provide a project-specific URL that field mappers can access from their mobile phones to select and map tasks.</li> </ul>"},{"location":"dev/Setup/#basic-tools-used","title":"Basic Tools used","text":""},{"location":"dev/Setup/#odk-collect","title":"ODK Collect","text":"<p>A mobile data collection tool that functions on almost all Android phones. Field mappers use ODK Collect to select features such as buildings or amenities, and fill out forms with survey questions to collect attributes or data about those features (normally at least some of these attributes are intended to become OSM tags associated with those features).</p> <p>The ODK Collect app connects to a back-end server (in this case ODK Central), which provides the features to be mapped and the survey form definitions.</p>"},{"location":"dev/Setup/#odk-central-server","title":"ODK Central server","text":"<p>An ODK Central server that functions as the back end for the field data collectors' ODK Collect apps on their Android phones. Devs must have access to an ODK Central server with a username and password granting admin credentials.</p> <p>Here are the instructions for setting up an ODK Central server on Digital Ocean (it's very similar on AWS or whatever)</p>"},{"location":"dev/Setup/#guide-for-users","title":"Guide for Users","text":""},{"location":"dev/Setup/#prerequisites","title":"Prerequisites","text":"<ul> <li>Stable internet connection.</li> <li>Mapping Knowledge (Optional): While not mandatory, having some mapping knowledge can enhance your experience with FMTM. If you are new to mapping we suggest you to read this</li> </ul>"},{"location":"dev/Setup/#steps-to-create-a-project-in-fmtm","title":"Steps to create a project in FMTM","text":"<ul> <li>Go to fmtm .</li> <li>If you are new then on the top right cornor click on Sign up and create an account . Else , Sign in to your existing account .</li> <li>Click the '+ CREATE NEW PROJECT' button.</li> <li>Enter the project details.</li> </ul> <ul> <li>Upload Area in the GEOJSON file format.</li> </ul> <ul> <li>Define the tasks of the project.</li> </ul> <ul> <li>Select Form .</li> </ul> <ul> <li> <p>Click on Submit button.</p> </li> <li> <p>Please watch the video below for more details</p> </li> </ul> <p>https://github.com/hotosm/fmtm/assets/97789856/8b63d8b5-2d13-4e54-8ddb-c262b0745b4f</p>"},{"location":"dev/Setup/#work-on-existing-projects","title":"Work on existing projects","text":"<p>If you donot want to create a new project and wish to work on an existing project then follow the steps below:</p> <ul> <li>Go to fmtm .</li> <li>If you are new then on the top right cornor click on Sign up and create an account . Else , Sign in to your existing account .</li> <li>Click the button Explore Projects .</li> <li>Select the project you can work on .</li> <li>Click on the marked area.</li> <li>Click on start mapping.</li> </ul> <p></p>"},{"location":"dev/Setup/#help-and-support","title":"Help and Support","text":"<p>If you encounter any issues or need assistance while using FMTM, you can access the following resources:</p> <ul> <li>Check the FAQs .</li> <li>Ask your doubts in the Slack channel: #fmtm-field-pilots</li> </ul>"},{"location":"dev/Setup/#thank-you","title":"Thank you","text":"<p>We are excited to have you join our community of passionate mappers and volunteers. FMTM is a powerful platform developed by the Humanitarian OpenStreetMap Team (HOT) to facilitate mapping projects for disaster response, humanitarian efforts, and community development.</p> <p>With FMTM, you have the opportunity to make a real impact by mapping areas that are in need of support. Your contributions help create detailed and up-to-date maps that aid organizations and communities in their efforts to respond to crises, plan infrastructure, and improve the lives of people around the world.</p> <p>Whether you are a seasoned mapper or new to the world of mapping, FMTM provides a user-friendly interface and a range of tools to make your mapping experience smooth and rewarding. You can create tasks, collaborate with other volunteers, and contribute to ongoing projects that align with your interests and expertise.</p> <p>By mapping with FMTM, you are joining a global community of dedicated individuals who share a common goal of using open data to make a positive difference. Together, we can create a more resilient and inclusive world.</p> <p>Explore the projects, join tasks, and contribute your skills to help us build accurate and comprehensive maps. Don't hesitate to ask questions, seek guidance, and engage with fellow mappers through our forums and communication channels.</p> <p>Thank you for being part of FMTM. Your mapping efforts are invaluable, and we appreciate your commitment to making a difference.</p> <p>Happy mapping!</p> <p>The FMTM Team</p>"},{"location":"dev/Setup/#guide-for-developers","title":"Guide for Developers","text":""},{"location":"dev/Setup/#fmtm-frontend","title":"FMTM frontend","text":"<p>To in details about the frontend click here .</p>"},{"location":"dev/Setup/#field-mapper-web-interface-with-mobile-friendly-map-view","title":"Field Mapper Web Interface (with mobile-friendly map view)","text":"<p>Ideally with a link that opens ODK Collect directly from the browser, but if that's hard, the fallback is downloading a QR code and importing it into ODK Collect.</p>"},{"location":"dev/Setup/#fmtm-backend","title":"FMTM backend","text":"<p>To in details about the backend click here .</p> <p>A backend that converts the project parameters entered by the Campaign Manager in the Manager Web Interface into a corresponding ODK Central project. Its functions include:</p> <ul> <li>Convert the AOI into a bounding box and corresponding Overpass API query</li> <li>Download (using the Overpass API) the OSM features that will be mapped in that bounding box (buildings and/or amenities) as well as the OSM line features that will be used as cutlines to subdivide the area</li> <li>Trim the features within the bounding box but outside the AOI polygon</li> <li>Convert the polygon features into centroid points (needed because ODK select from map doesn't yet deal with polygons; this is likely to change in the future but for now we'll work with points only)</li> <li>Use line features as cutlines to create individual tasks (squares don't make sense for field mapping, neighborhoods delineated by large roads, watercourses, and railways do)</li> <li>Split the AOI into those tasks based on parameters set in the Manager Web Interface (number of features or area per task, splitting strategy, etc).</li> <li>Use the ODK Central API to create, on the associated ODK Central server:</li> <li>A project for the whole AOI</li> <li>One survey form for each split task (neighborhood)<ul> <li>This might require modifying the xlsforms (to update the version ID of the forms and change the name of the geography file being referred to). This is pretty straightforward using OpenPyXL, though we have to be careful to keep the location within the spreadsheet of these two items consistent.</li> </ul> </li> <li>GeoJSON feature collections for each form (the buildings/amenities or whatever)</li> <li>An App User for each form, which in turn corresponds to a single task. When the ODK Collect app on a user's phone is configured to function as that App User, they have access to only the form and features/area of that task.</li> <li>A set of QR Codes and/or configuration files/strings for ODK Collect, one for each App User</li> </ul>"},{"location":"dev/Setup/#prerequisites-for-contribution","title":"Prerequisites for Contribution","text":""},{"location":"dev/Setup/#1-review-documentation","title":"1. Review documentation","text":"<p>Don't forget to review the Contribution guidelines and our Code of Conduct before contributing! Here are the steps to contribute to the frontend of Field Mapping Tasking Manager:</p>"},{"location":"dev/Setup/#2-fork-the-repository","title":"2. Fork the repository","text":"<p>Forking creates a copy of the repository in your own GitHub account. Go to the Field Mapping Tasking Manager repository and click the \"Fork\" button in the top right corner of the page.</p>"},{"location":"dev/Setup/#3-navigate-to-your-working-directory","title":"3. Navigate to your working directory","text":"<p>Open a terminal and navigate to the directory you want to work in using the following command:</p> <p><code>cd &lt;work-dir&gt;</code></p> <p>Make sure to replace <code>&lt;work-dir&gt;</code> with the name of your directory.</p>"},{"location":"dev/Setup/#4-clone-the-forked-repository","title":"4. Clone the forked repository","text":"<p>Clone the forked repository to your local machine using the following command:</p> <p><code>git clone https://github.com/&lt;your-username&gt;/fmtm.git</code></p> <p>Make sure to replace <code>&lt;your-username&gt;</code> with your GitHub username.</p>"},{"location":"dev/Setup/#5-create-a-new-branch","title":"5. Create a new branch","text":"<p>Create a new branch for your changes using the following command:</p> <p><code>git checkout -b branch-name</code></p> <p>Make sure to give your branch a descriptive name that reflects the changes you'll be making.</p>"},{"location":"dev/Setup/#6-make-changes","title":"6. Make changes","text":"<p>Make your contribution, run tests where needed and save.</p>"},{"location":"dev/Setup/#7-add-changes","title":"7. Add changes","text":"<p>Add the changes you've made using the following command:</p> <p><code>git add &lt;file-name&gt;</code></p> <p>Make sure you replace <code>&lt;file-name&gt;</code> with the name of the file you made changes to.</p>"},{"location":"dev/Setup/#8-commit-and-push","title":"8. Commit and push","text":"<p>Once you've added changes, commit them to your local branch using the following command:</p> <p><code>git commit -m \"Add feature\"</code></p> <p>Make sure to write a descriptive commit message that explains the changes you've made. Then, push your changes to your forked repository using the following command:</p> <p><code>git push origin branch-name</code></p>"},{"location":"dev/Setup/#9-submit-a-pull-request","title":"9. Submit a pull request","text":"<p>Go to your forked repository on GitHub and click the \"Pull requests\" tab. Change the base branch from <code>main</code> to <code>development</code>, select the branch that contains your changes from the compare branch, then click \"Create pull request\". This will open a new pull request in the fmtm repository, where you can describe your changes and request that they be merged into the main codebase.</p> <p>Note: After a PR has been approved and merged, if the branch is no longer in use, delete it both locally and remotely. Otherwise we get buried in dead branches we don't need. Use the following commands: Switch out of the branch you want to delete <code>git checkout &lt;some-other-branch&gt;</code>(Replace <code>&lt;some-other-branch&gt;</code> with any other existing branch name). Delete the branch locally <code>git branch -d &lt;branch-name&gt;</code> and then delete the branch remotely <code>git push origin --delete &lt;branch-name&gt;</code>(Replace <code>&lt;branch-name&gt;</code> with the name of the branch you want to delete).</p> <p>That's it! You've now contributed to the Field Mapping Tasking Manager.</p>"},{"location":"dev/Setup/#setup-your-local-environment","title":"Setup Your Local Environment","text":"<p>These steps are essential to run and test your code!</p>"},{"location":"dev/Setup/#1-setup-osm-oauth-20","title":"1. Setup OSM OAUTH 2.0","text":"<p>The FMTM uses OAUTH2 with OSM to authenticate users. To properly configure your FMTM project, you will need to create keys for OSM.</p> <ol> <li> <p>Login to OSM (If you do not have an account yet, click the signup button at the top navigation bar to create one). Click the drop down arrow on the extreme right of the navigation bar and select My Settings.</p> </li> <li> <p>Register your FMTM instance to OAuth 2 applications. Put your login redirect url as <code>http://127.0.0.1:8080/osmauth/</code>, For Production replace the URL as production API Url</p> </li> </ol> <p>Note: <code>127.0.0.1</code> is required instead of <code>localhost</code> due to OSM restrictions.</p> <p></p> <ol> <li> <p>Right now read user preferences permission is enough later on fmtm may need permission to modify the map option which should be updated on OSM_SCOPE variable on .env , Keep read_prefs for now.</p> </li> <li> <p>Now Copy your Client ID and Client Secret. Put them in the <code>OSM_CLIENT_ID</code> and <code>OSM_CLIENT_SECRET</code> field of your <code>.env</code> file</p> </li> </ol>"},{"location":"dev/Setup/#2-create-an-env-file","title":"2. Create an <code>.env</code> File","text":"<p>Environmental variables are used throughout this project. To get started, create <code>.env</code> file in the top level dir, Sample is <code>.env.example</code></p> <pre><code>cp .env.example .env\n</code></pre> <p>Your env should look like this:</p> <pre><code>### ODK Central ###\nODK_CENTRAL_URL=https://central-proxy\nODK_CENTRAL_USER=`&lt;any_valid_email_address&gt;`\nODK_CENTRAL_PASSWD=`&lt;password_of_central_user&gt;`\n\n### FMTM ###\n# DEBUG=True\n# LOG_LEVEL=DEBUG\nURL_SCHEME=http\nAPI_URL=127.0.0.1:8000\nFRONTEND_MAIN_URL=localhost:8080\nFRONTEND_MAP_URL=localhost:8081\n# API_PREFIX=/api\n\n### OSM ###\nOSM_CLIENT_ID=`&lt;OSM_CLIENT_ID_FROM_ABOVE&gt;`\nOSM_CLIENT_SECRET=`&lt;OSM_CLIENT_SECRET_FROM_ABOVE&gt;`\nOSM_URL=https://www.openstreetmap.org\nOSM_SCOPE=read_prefs\nOSM_LOGIN_REDIRECT_URI=http://127.0.0.1:8080/osmauth/\nOSM_SECRET_KEY=&lt;random_key_for_development&gt;\n\n### Database (optional) ###\nCENTRAL_DB_HOST=central-db\nCENTRAL_DB_USER=odk\nCENTRAL_DB_PASSWORD=odk\nCENTRAL_DB_NAME=odk\n\nFMTM_DB_HOST=fmtm-db\nFMTM_DB_USER=fmtm\nFMTM_DB_PASSWORD=fmtm\nFMTM_DB_NAME=fmtm'\n</code></pre> <p>Note: If extra cors origins are required for testing, the variable <code>EXTRA_CORS_ORIGINS</code> is a set of comma separated strings, e.g. http://localhost:7050,http://localhost:7051</p>"},{"location":"dev/Setup/#verify-setup","title":"Verify Setup","text":""},{"location":"dev/Setup/#check-deployment","title":"Check Deployment","text":"<p>For details on how to run this project locally for development, please look at: DEV 2. Backend</p>"},{"location":"dev/Setup/#check-authentication","title":"Check Authentication","text":"<p>Once you have deployed, you will need to check that you can properly authenticate.</p> <ol> <li> <p>Navigate to <code>http://127.0.0.1:8000/docs</code></p> <p>Three endpoints are responsible for oauth </p> </li> <li> <p>Select the <code>/auth/osm_login/</code> endpoint, click <code>Try it out</code> and then <code>Execute</code>.     This would give you the Login URL where you can supply your osm username and password.</p> <p>Your response should look like this:</p> <pre><code>{\"login_url\": \"https://www.openstreetmap.org/oauth2/authorize/?response_type=code&amp;client_id=xxxx\"}\n</code></pre> <p>Now copy and paste your login_url in a new tab. You would be redirected to OSM for your LOGIN. Give FMTM the necessary permission.</p> <p>After a successful login, you will get your <code>access_token</code> for FMTM, Copy it. Now, you can use it for rest of the endpoints that needs authorization.</p> </li> <li> <p>Check your access token: Select the <code>/auth/me/</code> endpoint and click <code>Try it out</code>.     Pass in the <code>access_token</code> you copied in the previous step into the <code>access-token</code> field and click <code>Execute</code>. You should get your osm id, username and profile picture id.</p> </li> </ol>"},{"location":"dev/Setup/#start-developing","title":"Start Developing","text":"<p>We look forward to seeing your creative solutions and the positive impact they bring to FMTM. Don't forget to review Contribution guidelines and our Code of Conduct before contributing!</p> <p>Happy coding!</p> <p>The FMTM Developer Team</p>"}]}